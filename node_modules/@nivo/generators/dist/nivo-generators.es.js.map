{"version":3,"file":"nivo-generators.es.js","sources":["../src/color.ts","../src/sets/countryCodes.ts","../src/sets/names.ts","../src/sets/programmingLanguages.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/bullet.ts","../src/chord.ts","../src/network.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/parallelCoordinates.ts","../src/sankey.ts","../src/swarmplot.ts","../src/index.ts"],"sourcesContent":["export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    distance: number\n    source: string\n    target: string\n}\n\ntype ExtraNode = {\n    color: string\n    depth: number\n    id: string\n    radius: number\n}\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            color: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = timeDays(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return shuffle(days)\n        .slice(0, size)\n        .map(day => {\n            return {\n                day: dayFormat(day),\n                value: Math.round(Math.random() * 400),\n            }\n        })\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n"],"names":["randColor","Math","round","random","countryCodes","names","programmingLanguages","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","generateBulletData","id","max","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","range","reduce","acc","remaining","measures","length","markers","map","generateChordData","keys","size","minValue","maxValue","maxSize","min","selectedKeys","slice","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","radius","depth","color","nodes","Array","from","_","k","links","extraNodes","forEach","source","push","target","distance","concat","defineProperty","generateParallelCoordinatesData","key","shuffle","datumGenerator","value","undefined","availableNodes","name","getNodeTargets","currentPath","targets","filter","Error","includes","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","node","Object","assign","randId","n","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","groups","categoryCount","data","group","groupIndex","price","index","datum","volume","categories","randomizeSwarmPlotData","previousData","d","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","language","label","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","rand","types","country","x","find","y","generateSerie","generateSeries","ids","xKeys","generateStackData","v","i","generateCountriesPopulation","countryCode","population","generateDayCounts","to","days","timeDays","dayFormat","timeFormat","day","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine"],"mappings":"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"}