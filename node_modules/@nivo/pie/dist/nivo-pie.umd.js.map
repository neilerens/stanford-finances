{"version":3,"file":"nivo-pie.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/PieLegends.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/PieTooltip.tsx","../src/props.ts","../src/hooks.ts","../src/Arcs.tsx","../src/Pie.tsx","../src/ResponsivePie.tsx","../src/PieCanvas.tsx","../src/ResponsivePieCanvas.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    dataWithArc: ComputedDatum<RawDatum>[]\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    dataWithArc,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={dataWithArc}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { ArcGenerator, useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n}): Omit<ComputedDatum<RawDatum>, 'fill'>[] => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(\n        () =>\n            pie(data).map(\n                (\n                    arc: Omit<\n                        PieArc,\n                        'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                    > & {\n                        data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                    }\n                ) => {\n                    const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                    return {\n                        ...arc.data,\n                        arc: {\n                            index: arc.index,\n                            startAngle: arc.startAngle,\n                            endAngle: arc.endAngle,\n                            innerRadius:\n                                activeId === arc.data.id\n                                    ? innerRadius - activeInnerRadiusOffset\n                                    : innerRadius,\n                            outerRadius:\n                                activeId === arc.data.id\n                                    ? outerRadius + activeOuterRadiusOffset\n                                    : outerRadius,\n                            thickness: outerRadius - innerRadius,\n                            padAngle: arc.padAngle,\n                            angle,\n                            angleDeg: radiansToDegrees(angle),\n                        },\n                    }\n                }\n            ),\n\n        [\n            pie,\n            data,\n            innerRadius,\n            outerRadius,\n            activeId,\n            activeInnerRadiusOffset,\n            activeInnerRadiusOffset,\n        ]\n    )\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { dataWithArc, arcGenerator, setActiveId }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        dataWithArc,\n        arcGenerator,\n        setActiveId,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    centerX: number\n    centerY: number\n    radius: number\n    innerRadius: number\n}): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import React, { createElement, useMemo } from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import React, { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                dataWithArc={dataWithArc}\n                legends={legends}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n        theme={theme}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import React, { createElement, useEffect, useMemo, useRef } from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\n// @ts-ignore\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container isInteractive={isInteractive} theme={theme}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","PieLegends","width","height","legends","dataWithArc","React","map","legend","i","BoxLegendSvg","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","defineProperty","PieTooltip","datum","BasicTooltip","id","formattedValue","color","defaultProps","value","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","fill","isInteractive","animate","motionConfig","transitionMode","tooltip","role","pixelRatio","window","devicePixelRatio","useNormalizedData","data","valueFormat","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","useMemo","datumId","datumValue","normalizedDatum","label","usePieArcs","outerRadius","activeId","pie","innerPie","d3Pie","d","degreesToRadians","sortValues","arc","angle","Math","abs","index","thickness","angleDeg","radiansToDegrees","usePie","radius","useState","setActiveId","arcGenerator","useArcGenerator","usePieFromBox","innerRadiusRatio","computedProps","min","centerX","centerY","boundingBox","computeArcBoundingBox","points","box","ratio","adjustedBox","x","y","debug","usePieLayerContext","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","undefined","event","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","ArcsLayer","InnerPie","partialMargin","margin","arcLabelsComponent","arcLinkLabelComponent","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","normalizedData","boundDefs","bindDefs","layerById","arcLinkLabels","arcs","arcLabels","includes","ArcLinkLabelsLayer","ArcLabelsLayer","length","layerContext","SvgWrapper","layer","Fragment","Pie","otherProps","Container","ResponsivePie","props","ResponsiveWrapper","InnerPieCanvas","canvasEl","useRef","useTheme","getBorderColor","useInheritedColor","useArcLabels","skipAngle","offset","textColor","useArcLinkLabels","diagonalLength","straightLength","linkColor","textOffset","useEffect","current","ctx","getContext","scale","fillStyle","background","fillRect","save","translate","left","top","context","forEach","beginPath","strokeStyle","lineWidth","stroke","drawCanvasArcLinkLabels","drawCanvasArcLabels","restore","renderLegendToCanvas","containerWidth","containerHeight","getArcFromMouse","getRelativeCursor","hoveredArc","findArcUnderCursor","find","handleMouseHover","cursor","PieCanvas","ResponsivePieCanvas"],"mappings":"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"}