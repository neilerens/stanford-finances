{"version":3,"file":"nivo-arcs.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/utils.ts","../src/arcTransitionMode.ts","../src/centers.ts","../src/arc_labels/ArcLabel.tsx","../src/arc_labels/ArcLabelsLayer.tsx","../src/arc_labels/canvas.ts","../src/arc_labels/useArcLabels.ts","../src/arc_link_labels/compute.ts","../src/arc_link_labels/useArcLinkLabelsTransition.ts","../src/arc_link_labels/ArcLinkLabel.tsx","../src/arc_link_labels/ArcLinkLabelsLayer.tsx","../src/arc_link_labels/canvas.ts","../src/arc_link_labels/useArcLinks.ts","../src/arc_link_labels/useArcLinkLabels.ts","../src/ArcShape.tsx","../src/interpolateArc.ts","../src/useArcsTransition.ts","../src/ArcsLayer.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/boundingBox.ts","../src/interactivity.ts","../src/useAnimatedArc.ts","../src/useArcGenerator.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from 'react-spring'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter = (offset: number) => (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            const centroid = computeArcCenter(\n                { startAngle, endAngle, innerRadius, outerRadius },\n                offset\n            )\n\n            return `translate(${centroid.x},${centroid.y})`\n        }\n    )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import React, { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: CompleteTheme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, label.x, label.y)\n    })\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from 'react-spring'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    } = useArcLinkLabelsTransition<Datum>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        linkColor,\n        textColor,\n    })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import {\n    // @ts-ignore\n    textPropsByEngine,\n    CompleteTheme,\n} from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: CompleteTheme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        ctx.fillText(`${label.label}`, label.x, label.y)\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n","import React, { useCallback } from 'react'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(event => onMouseEnter?.(datum, event), [\n        onMouseEnter,\n        datum,\n    ])\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(event => onMouseLeave?.(datum, event), [\n        onMouseLeave,\n        datum,\n    ])\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { to, SpringValue } from 'react-spring'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import React, { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter === true) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n","import { useSpring } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { Arc, ArcGenerator } from './types'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a single arc,\n * if you want to animate a group of arcs,\n * please have a look at the `useArcsTransition` hook.\n */\nexport const useAnimatedArc = (datumWithArc: { arc: Arc }, arcGenerator: ArcGenerator) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedValues = useSpring({\n        startAngle: datumWithArc.arc.startAngle,\n        endAngle: datumWithArc.arc.endAngle,\n        innerRadius: datumWithArc.arc.innerRadius,\n        outerRadius: datumWithArc.arc.outerRadius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        ...animatedValues,\n        path: interpolateArc(\n            animatedValues.startAngle,\n            animatedValues.endAngle,\n            animatedValues.innerRadius,\n            animatedValues.outerRadius,\n            arcGenerator\n        ),\n    }\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n"],"names":["defineProperty","getNormalizedAngle","angle","normalizedAngle","Math","PI","filterDataBySkipAngle","data","skipAngle","filter","datum","abs","radiansToDegrees","arc","endAngle","startAngle","useFilteredDataBySkipAngle","useMemo","arcTransitionModes","arcTransitionModeById","enter","update","leave","middleAngle","innerRadius","outerRadius","centerRadius","pushIn","pushOut","useArcTransitionMode","mode","extraTransition","transitionMode","progress","computeArcCenter","offset","midAngle","radius","positionFromAngle","interpolateArcCenter","startAngleValue","endAngleValue","innerRadiusValue","outerRadiusValue","to","centroid","x","y","useArcCentersTransition","extra","useMotionConfig","animate","springConfig","config","phases","transition","useTransition","keys","id","initial","from","immediate","interpolate","useArcCenters","computeExtraProps","map","position","staticStyle","pointerEvents","ArcLabel","label","style","theme","useTheme","React","animated","transform","labels","text","fill","textColor","ArcLabelsLayer","center","labelAccessor","radiusOffset","component","getLabel","usePropertyAccessor","getTextColor","useInheritedColor","filteredData","Label","transitionProps","createElement","key","drawCanvasArcLabels","ctx","textAlign","textBaseline","font","fontSize","fontFamily","forEach","fillStyle","fillText","useArcLabels","useCallback","computeArcLinkTextAnchor","centerAngle","computeArcLink","diagonalLength","straightLength","point0","point1","side","point2","points","lineGenerator","line","d","useTransitionPhases","textOffset","getLinkColor","linkColor","opacity","interpolateLink","offsetValue","diagonalLengthValue","straightLengthValue","diagonalLengthAnimated","straightLengthAnimated","interpolateTextAnchor","interpolateTextPosition","textOffsetValue","useArcLinkLabelsTransition","transitionPhases","ArcLinkLabel","thickness","path","textPosition","textAnchor","ArcLinkLabelsLayer","strokeWidth","drawCanvasArcLinkLabels","textPropsByEngine","canvas","align","beginPath","strokeStyle","lineWidth","point","index","moveTo","lineTo","stroke","useArcLinks","links","link","useArcLinkLabels","ArcShape","onClick","onMouseEnter","onMouseMove","onMouseLeave","handleClick","event","handleMouseEnter","handleMouseMove","handleMouseLeave","color","borderColor","borderWidth","undefined","interpolateArc","arcGenerator","max","useArcsTransition","ArcsLayer","getBorderColor","Arc","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayWithHoles","iterableToArrayLimit","nonIterableRest","computeArcBoundingBox","centerX","centerY","includeCenter","p0","degreesToRadians","push","p1","round","min","p","xs","ys","x0","x1","y0","y1","width","height","isCursorInRing","cursorX","cursorY","distance","getDistance","findArcUnderCursor","arcs","cursorAngle","getAngle","find","useAnimatedArc","datumWithArc","animatedValues","useSpring","useArcGenerator","cornerRadius","padAngle","d3Arc"],"mappings":"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"}