{"version":3,"file":"nivo-arcs.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/utils.ts","../src/arcTransitionMode.ts","../src/centers.ts","../src/arc_labels/ArcLabel.tsx","../src/arc_labels/ArcLabelsLayer.tsx","../src/arc_labels/canvas.ts","../src/arc_labels/useArcLabels.ts","../src/arc_link_labels/compute.ts","../src/arc_link_labels/useArcLinkLabelsTransition.ts","../src/arc_link_labels/ArcLinkLabel.tsx","../src/arc_link_labels/ArcLinkLabelsLayer.tsx","../src/arc_link_labels/canvas.ts","../src/arc_link_labels/useArcLinks.ts","../src/arc_link_labels/useArcLinkLabels.ts","../src/ArcShape.tsx","../src/interpolateArc.ts","../src/useArcsTransition.ts","../src/ArcsLayer.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/boundingBox.ts","../src/interactivity.ts","../src/useAnimatedArc.ts","../src/useArcGenerator.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from 'react-spring'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter = (offset: number) => (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            const centroid = computeArcCenter(\n                { startAngle, endAngle, innerRadius, outerRadius },\n                offset\n            )\n\n            return `translate(${centroid.x},${centroid.y})`\n        }\n    )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import React, { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: CompleteTheme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, label.x, label.y)\n    })\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from 'react-spring'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    } = useArcLinkLabelsTransition<Datum>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        linkColor,\n        textColor,\n    })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import {\n    // @ts-ignore\n    textPropsByEngine,\n    CompleteTheme,\n} from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: CompleteTheme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        ctx.fillText(`${label.label}`, label.x, label.y)\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n","import React, { useCallback } from 'react'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(event => onMouseEnter?.(datum, event), [\n        onMouseEnter,\n        datum,\n    ])\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(event => onMouseLeave?.(datum, event), [\n        onMouseLeave,\n        datum,\n    ])\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { to, SpringValue } from 'react-spring'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import React, { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter === true) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n","import { useSpring } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { Arc, ArcGenerator } from './types'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a single arc,\n * if you want to animate a group of arcs,\n * please have a look at the `useArcsTransition` hook.\n */\nexport const useAnimatedArc = (datumWithArc: { arc: Arc }, arcGenerator: ArcGenerator) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedValues = useSpring({\n        startAngle: datumWithArc.arc.startAngle,\n        endAngle: datumWithArc.arc.endAngle,\n        innerRadius: datumWithArc.arc.innerRadius,\n        outerRadius: datumWithArc.arc.outerRadius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        ...animatedValues,\n        path: interpolateArc(\n            animatedValues.startAngle,\n            animatedValues.endAngle,\n            animatedValues.innerRadius,\n            animatedValues.outerRadius,\n            arcGenerator\n        ),\n    }\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n"],"names":["defineProperty","getNormalizedAngle","angle","normalizedAngle","Math","PI","filterDataBySkipAngle","data","skipAngle","filter","datum","abs","radiansToDegrees","arc","endAngle","startAngle","useFilteredDataBySkipAngle","useMemo","arcTransitionModes","arcTransitionModeById","enter","update","leave","middleAngle","innerRadius","outerRadius","centerRadius","pushIn","pushOut","useArcTransitionMode","mode","extraTransition","transitionMode","progress","computeArcCenter","offset","midAngle","radius","positionFromAngle","interpolateArcCenter","startAngleValue","endAngleValue","innerRadiusValue","outerRadiusValue","to","centroid","x","y","useArcCentersTransition","extra","useMotionConfig","animate","springConfig","config","phases","transition","useTransition","keys","id","initial","from","immediate","interpolate","useArcCenters","computeExtraProps","map","position","staticStyle","pointerEvents","ArcLabel","label","style","theme","useTheme","transform","labels","text","fill","textColor","ArcLabelsLayer","center","labelAccessor","radiusOffset","component","getLabel","usePropertyAccessor","getTextColor","useInheritedColor","filteredData","Label","transitionProps","React","createElement","key","drawCanvasArcLabels","ctx","textAlign","textBaseline","font","fontSize","fontFamily","forEach","fillStyle","fillText","useArcLabels","useCallback","computeArcLinkTextAnchor","centerAngle","computeArcLink","diagonalLength","straightLength","point0","point1","side","point2","points","lineGenerator","line","d","useTransitionPhases","textOffset","getLinkColor","linkColor","opacity","interpolateLink","offsetValue","diagonalLengthValue","straightLengthValue","diagonalLengthAnimated","straightLengthAnimated","interpolateTextAnchor","interpolateTextPosition","textOffsetValue","useArcLinkLabelsTransition","transitionPhases","ArcLinkLabel","thickness","path","textPosition","textAnchor","ArcLinkLabelsLayer","strokeWidth","drawCanvasArcLinkLabels","textPropsByEngine","canvas","align","beginPath","strokeStyle","lineWidth","point","index","moveTo","lineTo","stroke","useArcLinks","links","link","useArcLinkLabels","ArcShape","onClick","onMouseEnter","onMouseMove","onMouseLeave","handleClick","event","handleMouseEnter","handleMouseMove","handleMouseLeave","color","borderColor","borderWidth","undefined","interpolateArc","arcGenerator","max","useArcsTransition","ArcsLayer","getBorderColor","Arc","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayWithHoles","iterableToArrayLimit","nonIterableRest","computeArcBoundingBox","centerX","centerY","includeCenter","p0","degreesToRadians","push","p1","round","min","p","xs","ys","x0","x1","y0","y1","width","height","isCursorInRing","cursorX","cursorY","distance","getDistance","findArcUnderCursor","arcs","cursorAngle","getAngle","find","useAnimatedArc","datumWithArc","animatedValues","useSpring","useArcGenerator","cornerRadius","padAngle","d3Arc"],"mappings":"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"}