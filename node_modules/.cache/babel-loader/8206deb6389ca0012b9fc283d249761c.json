{"ast":null,"code":"import _uniq from 'lodash/uniq';\nimport React, { useState, useMemo, memo, useCallback, Fragment } from 'react';\nimport { blendModePropType, motionPropTypes, noop, useTheme, getLabelGenerator, useMotionConfig, useAnimatedPath, withContainer, useDimensions, SvgWrapper, ResponsiveWrapper } from '@nivo/core';\nimport { LegendPropShape, BoxLegendSvg } from '@nivo/legends';\nimport PropTypes from 'prop-types';\nimport { sankeyCenter, sankeyJustify, sankeyLeft, sankeyRight, sankey } from 'd3-sankey';\nimport { ordinalColorsPropType, inheritedColorPropType, useOrdinalColorScale, useInheritedColor } from '@nivo/colors';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useSpring, animated, to, useSprings } from 'react-spring';\nimport { useTooltip, BasicTooltip, Chip } from '@nivo/tooltip';\nimport { line, curveMonotoneX, curveMonotoneY } from 'd3-shape';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar sankeyAlignmentPropMapping = {\n  center: sankeyCenter,\n  justify: sankeyJustify,\n  start: sankeyLeft,\n  end: sankeyRight\n};\nvar sankeyAlignmentPropKeys = Object.keys(sankeyAlignmentPropMapping);\nvar sankeyAlignmentPropType = PropTypes.oneOf(sankeyAlignmentPropKeys);\n\nvar sankeyAlignmentFromProp = function sankeyAlignmentFromProp(prop) {\n  return sankeyAlignmentPropMapping[prop];\n};\n\nvar SankeyPropTypes = _objectSpread2({\n  data: PropTypes.shape({\n    nodes: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n    })).isRequired,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      target: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n    })).isRequired\n  }).isRequired,\n  layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  align: sankeyAlignmentPropType.isRequired,\n  sort: PropTypes.oneOfType([PropTypes.oneOf(['auto', 'input', 'ascending', 'descending']), PropTypes.func]).isRequired,\n  colors: ordinalColorsPropType.isRequired,\n  nodeOpacity: PropTypes.number.isRequired,\n  nodeHoverOpacity: PropTypes.number.isRequired,\n  nodeHoverOthersOpacity: PropTypes.number.isRequired,\n  nodeThickness: PropTypes.number.isRequired,\n  nodeSpacing: PropTypes.number.isRequired,\n  nodeInnerPadding: PropTypes.number.isRequired,\n  nodeBorderWidth: PropTypes.number.isRequired,\n  nodeBorderColor: inheritedColorPropType,\n  linkOpacity: PropTypes.number.isRequired,\n  linkHoverOpacity: PropTypes.number.isRequired,\n  linkHoverOthersOpacity: PropTypes.number.isRequired,\n  linkContract: PropTypes.number.isRequired,\n  linkBlendMode: blendModePropType.isRequired,\n  enableLinkGradient: PropTypes.bool.isRequired,\n  enableLabels: PropTypes.bool.isRequired,\n  labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n  labelPadding: PropTypes.number.isRequired,\n  labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  labelTextColor: inheritedColorPropType,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  labelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  nodeTooltip: PropTypes.func,\n  linkTooltip: PropTypes.func,\n  isInteractive: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes', 'labels', 'legends']), PropTypes.func])).isRequired,\n  role: PropTypes.string.isRequired\n}, motionPropTypes);\n\nvar SankeyDefaultProps = {\n  layout: 'horizontal',\n  align: 'center',\n  sort: 'auto',\n  colors: {\n    scheme: 'nivo'\n  },\n  nodeOpacity: 0.75,\n  nodeHoverOpacity: 1,\n  nodeHoverOthersOpacity: 0.15,\n  nodeThickness: 12,\n  nodeSpacing: 12,\n  nodeInnerPadding: 0,\n  nodeBorderWidth: 1,\n  nodeBorderColor: {\n    from: 'color',\n    modifiers: [['darker', 0.5]]\n  },\n  linkOpacity: 0.25,\n  linkHoverOpacity: 0.6,\n  linkHoverOthersOpacity: 0.15,\n  linkContract: 0,\n  linkBlendMode: 'multiply',\n  enableLinkGradient: false,\n  enableLabels: true,\n  label: 'id',\n  labelPosition: 'inside',\n  labelPadding: 9,\n  labelOrientation: 'horizontal',\n  labelTextColor: {\n    from: 'color',\n    modifiers: [['darker', 0.8]]\n  },\n  isInteractive: true,\n  onClick: noop,\n  legends: [],\n  layers: ['links', 'nodes', 'labels', 'legends'],\n  role: 'img',\n  animate: true,\n  motionConfig: 'gentle'\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar getId = function getId(d) {\n  return d.id;\n};\n\nvar computeNodeAndLinks = function computeNodeAndLinks(_ref) {\n  var _data = _ref.data,\n      layout = _ref.layout,\n      alignFunction = _ref.alignFunction,\n      sortFunction = _ref.sortFunction,\n      linkSortMode = _ref.linkSortMode,\n      nodeThickness = _ref.nodeThickness,\n      nodeSpacing = _ref.nodeSpacing,\n      nodeInnerPadding = _ref.nodeInnerPadding,\n      width = _ref.width,\n      height = _ref.height,\n      getColor = _ref.getColor,\n      getLinkColor = _ref.getLinkColor,\n      getLabel = _ref.getLabel;\n  var sankey$1 = sankey().nodeAlign(alignFunction).nodeSort(sortFunction).linkSort(linkSortMode).nodeWidth(nodeThickness).nodePadding(nodeSpacing).size(layout === 'horizontal' ? [width, height] : [height, width]).nodeId(getId);\n\n  var data = _cloneDeep(_data);\n\n  sankey$1(data);\n  data.nodes.forEach(function (node) {\n    node.color = getColor(node);\n    node.label = getLabel(node);\n\n    if (layout === 'horizontal') {\n      node.x = node.x0 + nodeInnerPadding;\n      node.y = node.y0;\n      node.width = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0);\n      node.height = Math.max(node.y1 - node.y0, 0);\n    } else {\n      node.x = node.y0;\n      node.y = node.x0 + nodeInnerPadding;\n      node.width = Math.max(node.y1 - node.y0, 0);\n      node.height = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0);\n      var oldX0 = node.x0;\n      var oldX1 = node.x1;\n      node.x0 = node.y0;\n      node.x1 = node.y1;\n      node.y0 = oldX0;\n      node.y1 = oldX1;\n    }\n  });\n  data.links.forEach(function (link) {\n    link.color = getLinkColor(link);\n    link.pos0 = link.y0;\n    link.pos1 = link.y1;\n    link.thickness = link.width;\n    delete link.y0;\n    delete link.y1;\n    delete link.width;\n  });\n  return data;\n};\n\nvar useSankey = function useSankey(_ref2) {\n  var data = _ref2.data,\n      layout = _ref2.layout,\n      width = _ref2.width,\n      height = _ref2.height,\n      sort = _ref2.sort,\n      align = _ref2.align,\n      colors = _ref2.colors,\n      nodeThickness = _ref2.nodeThickness,\n      nodeSpacing = _ref2.nodeSpacing,\n      nodeInnerPadding = _ref2.nodeInnerPadding,\n      nodeBorderColor = _ref2.nodeBorderColor,\n      label = _ref2.label,\n      labelFormat = _ref2.labelFormat,\n      labelTextColor = _ref2.labelTextColor;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentNode = _useState2[0],\n      setCurrentNode = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentLink = _useState4[0],\n      setCurrentLink = _useState4[1];\n\n  var sortFunction = useMemo(function () {\n    if (sort === 'auto') return undefined;\n    if (sort === 'input') return null;\n    if (sort === 'ascending') return function (a, b) {\n      return a.value - b.value;\n    };\n    if (sort === 'descending') return function (a, b) {\n      return b.value - a.value;\n    };\n    return sort;\n  }, [sort]);\n  var linkSortMode = sort === 'input' ? null : undefined;\n  var alignFunction = useMemo(function () {\n    return sankeyAlignmentFromProp(align);\n  }, [align]);\n  var theme = useTheme();\n  var getColor = useOrdinalColorScale(colors, 'id');\n  var getNodeBorderColor = useInheritedColor(nodeBorderColor, theme);\n  var getLinkColor = useOrdinalColorScale(colors, 'source.id');\n  var getLabel = useMemo(function () {\n    return getLabelGenerator(label, labelFormat);\n  }, [label, labelFormat]);\n  var getLabelTextColor = useInheritedColor(labelTextColor, theme);\n\n  var _useMemo = useMemo(function () {\n    return computeNodeAndLinks({\n      data: data,\n      layout: layout,\n      alignFunction: alignFunction,\n      sortFunction: sortFunction,\n      linkSortMode: linkSortMode,\n      nodeThickness: nodeThickness,\n      nodeSpacing: nodeSpacing,\n      nodeInnerPadding: nodeInnerPadding,\n      width: width,\n      height: height,\n      getColor: getColor,\n      getLinkColor: getLinkColor,\n      getLabel: getLabel\n    });\n  }, [data, layout, alignFunction, sortFunction, linkSortMode, nodeThickness, nodeSpacing, nodeInnerPadding, width, height, getColor, getLinkColor, getLabel]),\n      nodes = _useMemo.nodes,\n      links = _useMemo.links;\n\n  var legendData = useMemo(function () {\n    return nodes.map(function (node) {\n      return {\n        id: node.id,\n        label: node.label,\n        color: node.color\n      };\n    });\n  }, [nodes]);\n  return {\n    nodes: nodes,\n    links: links,\n    legendData: legendData,\n    getNodeBorderColor: getNodeBorderColor,\n    currentNode: currentNode,\n    setCurrentNode: setCurrentNode,\n    currentLink: currentLink,\n    setCurrentLink: setCurrentLink,\n    getLabelTextColor: getLabelTextColor\n  };\n};\n\nvar SankeyNodesItem = function SankeyNodesItem(_ref) {\n  var node = _ref.node,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      color = _ref.color,\n      opacity = _ref.opacity,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      setCurrent = _ref.setCurrent,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltip = _ref.tooltip;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    opacity: opacity,\n    color: color,\n    config: springConfig,\n    immediate: !animate\n  });\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var tooltipContent = useMemo(function () {\n    if (tooltip) {\n      return React.createElement(BasicTooltip, {\n        id: tooltip(node),\n        enableChip: false\n      });\n    }\n\n    return React.createElement(BasicTooltip, {\n      id: node.label,\n      enableChip: true,\n      color: node.color\n    });\n  }, [tooltip, node]);\n  var handleMouseEnter = useCallback(function (event) {\n    setCurrent(node);\n    showTooltipFromEvent(tooltipContent, event, 'left');\n  }, [setCurrent, node, showTooltipFromEvent, tooltipContent]);\n  var handleMouseMove = useCallback(function (event) {\n    showTooltipFromEvent(tooltipContent, event, 'left');\n  }, [showTooltipFromEvent, tooltipContent]);\n  var handleMouseLeave = useCallback(function () {\n    setCurrent(null);\n    hideTooltip();\n  }, [setCurrent, hideTooltip]);\n  var handleClick = useCallback(function (event) {\n    onClick(node, event);\n  }, [onClick, node]);\n  return React.createElement(animated.rect, {\n    x: animatedProps.x,\n    y: animatedProps.y,\n    width: to(animatedProps.width, function (v) {\n      return Math.max(v, 0);\n    }),\n    height: to(animatedProps.height, function (v) {\n      return Math.max(v, 0);\n    }),\n    fill: animatedProps.color,\n    fillOpacity: animatedProps.opacity,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    strokeOpacity: opacity,\n    onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n    onMouseMove: isInteractive ? handleMouseMove : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined\n  });\n};\n\nvar SankeyNodesItem$1 = memo(SankeyNodesItem);\n\nvar SankeyNodes = function SankeyNodes(_ref) {\n  var nodes = _ref.nodes,\n      nodeOpacity = _ref.nodeOpacity,\n      nodeHoverOpacity = _ref.nodeHoverOpacity,\n      nodeHoverOthersOpacity = _ref.nodeHoverOthersOpacity,\n      nodeBorderWidth = _ref.nodeBorderWidth,\n      getNodeBorderColor = _ref.getNodeBorderColor,\n      setCurrentNode = _ref.setCurrentNode,\n      currentNode = _ref.currentNode,\n      currentLink = _ref.currentLink,\n      isCurrentNode = _ref.isCurrentNode,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltip = _ref.tooltip;\n\n  var getOpacity = function getOpacity(node) {\n    if (!currentNode && !currentLink) return nodeOpacity;\n    if (isCurrentNode(node)) return nodeHoverOpacity;\n    return nodeHoverOthersOpacity;\n  };\n\n  return nodes.map(function (node) {\n    return React.createElement(SankeyNodesItem$1, {\n      key: node.id,\n      node: node,\n      x: node.x,\n      y: node.y,\n      width: node.width,\n      height: node.height,\n      color: node.color,\n      opacity: getOpacity(node),\n      borderWidth: nodeBorderWidth,\n      borderColor: getNodeBorderColor(node),\n      setCurrent: setCurrentNode,\n      isInteractive: isInteractive,\n      onClick: onClick,\n      tooltip: tooltip\n    });\n  });\n};\n\nvar SankeyNodes$1 = memo(SankeyNodes);\nvar SankeyLinkGradient = memo(function (_ref) {\n  var id = _ref.id,\n      layout = _ref.layout,\n      startColor = _ref.startColor,\n      endColor = _ref.endColor;\n  var gradientProps = {};\n\n  if (layout === 'horizontal') {\n    gradientProps.x1 = '0%';\n    gradientProps.x2 = '100%';\n    gradientProps.y1 = '0%';\n    gradientProps.y2 = '0%';\n  } else {\n    gradientProps.x1 = '0%';\n    gradientProps.x2 = '0%';\n    gradientProps.y1 = '0%';\n    gradientProps.y2 = '100%';\n  }\n\n  return React.createElement(\"linearGradient\", Object.assign({\n    id: id,\n    spreadMethod: \"pad\"\n  }, gradientProps), React.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: startColor\n  }), React.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: endColor\n  }));\n});\nSankeyLinkGradient.displayName = 'SankeyLinkGradient';\nvar tooltipStyles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  sourceChip: {\n    marginRight: 7\n  },\n  targetChip: {\n    marginLeft: 7,\n    marginRight: 7\n  }\n};\n\nvar TooltipContent = function TooltipContent(_ref) {\n  var link = _ref.link,\n      format = _ref.format;\n  return React.createElement(\"span\", {\n    style: tooltipStyles.container\n  }, React.createElement(Chip, {\n    color: link.source.color,\n    style: tooltipStyles.sourceChip\n  }), React.createElement(\"strong\", null, link.source.label), ' > ', React.createElement(\"strong\", null, link.target.label), React.createElement(Chip, {\n    color: link.target.color,\n    style: tooltipStyles.targetChip\n  }), React.createElement(\"strong\", null, format ? format(link.value) : link.value));\n};\n\nvar SankeyLinksItem = function SankeyLinksItem(_ref2) {\n  var link = _ref2.link,\n      layout = _ref2.layout,\n      path = _ref2.path,\n      color = _ref2.color,\n      opacity = _ref2.opacity,\n      blendMode = _ref2.blendMode,\n      enableGradient = _ref2.enableGradient,\n      setCurrent = _ref2.setCurrent,\n      tooltip = _ref2.tooltip,\n      tooltipFormat = _ref2.tooltipFormat,\n      isInteractive = _ref2.isInteractive,\n      onClick = _ref2.onClick;\n  var linkId = \"\".concat(link.source.id, \".\").concat(link.target.id);\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedPath = useAnimatedPath(path);\n  var animatedProps = useSpring({\n    color: color,\n    opacity: opacity,\n    config: springConfig,\n    immediate: !animate\n  });\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var tooltipContent = useMemo(function () {\n    if (tooltip) {\n      return React.createElement(BasicTooltip, {\n        id: tooltip(link),\n        enableChip: false\n      });\n    }\n\n    return React.createElement(BasicTooltip, {\n      id: React.createElement(TooltipContent, {\n        format: tooltipFormat,\n        link: link\n      })\n    });\n  }, [tooltip, tooltipFormat, link]);\n  var handleMouseEnter = useCallback(function (event) {\n    setCurrent(link);\n    showTooltipFromEvent(tooltipContent, event, 'left');\n  }, [setCurrent, link, showTooltipFromEvent, tooltipContent]);\n  var handleMouseMove = useCallback(function (event) {\n    showTooltipFromEvent(tooltipContent, event, 'left');\n  }, [showTooltipFromEvent, tooltipContent]);\n  var handleMouseLeave = useCallback(function () {\n    setCurrent(null);\n    hideTooltip();\n  }, [setCurrent, hideTooltip]);\n  var handleClick = useCallback(function (event) {\n    onClick(link, event);\n  }, [onClick, link]);\n  return React.createElement(React.Fragment, null, enableGradient && React.createElement(SankeyLinkGradient, {\n    id: linkId,\n    layout: layout,\n    startColor: link.startColor || link.source.color,\n    endColor: link.endColor || link.target.color\n  }), React.createElement(animated.path, {\n    fill: enableGradient ? \"url(\\\"#\".concat(encodeURI(linkId), \"\\\")\") : animatedProps.color,\n    d: animatedPath,\n    fillOpacity: animatedProps.opacity,\n    onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n    onMouseMove: isInteractive ? handleMouseMove : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined,\n    style: {\n      mixBlendMode: blendMode\n    }\n  }));\n};\n\nvar SankeyLinksItem$1 = memo(SankeyLinksItem);\n\nvar sankeyLinkHorizontal = function sankeyLinkHorizontal() {\n  var lineGenerator = line().curve(curveMonotoneX);\n  return function (n, contract) {\n    var thickness = Math.max(1, n.thickness - contract * 2);\n    var halfThickness = thickness / 2;\n    var linkLength = n.target.x0 - n.source.x1;\n    var padLength = linkLength * 0.12;\n    var dots = [[n.source.x1, n.pos0 - halfThickness], [n.source.x1 + padLength, n.pos0 - halfThickness], [n.target.x0 - padLength, n.pos1 - halfThickness], [n.target.x0, n.pos1 - halfThickness], [n.target.x0, n.pos1 + halfThickness], [n.target.x0 - padLength, n.pos1 + halfThickness], [n.source.x1 + padLength, n.pos0 + halfThickness], [n.source.x1, n.pos0 + halfThickness], [n.source.x1, n.pos0 - halfThickness]];\n    return lineGenerator(dots) + 'Z';\n  };\n};\n\nvar sankeyLinkVertical = function sankeyLinkVertical() {\n  var lineGenerator = line().curve(curveMonotoneY);\n  return function (n, contract) {\n    var thickness = Math.max(1, n.thickness - contract * 2);\n    var halfThickness = thickness / 2;\n    var linkLength = n.target.y0 - n.source.y1;\n    var padLength = linkLength * 0.12;\n    var dots = [[n.pos0 + halfThickness, n.source.y1], [n.pos0 + halfThickness, n.source.y1 + padLength], [n.pos1 + halfThickness, n.target.y0 - padLength], [n.pos1 + halfThickness, n.target.y0], [n.pos1 - halfThickness, n.target.y0], [n.pos1 - halfThickness, n.target.y0 - padLength], [n.pos0 - halfThickness, n.source.y1 + padLength], [n.pos0 - halfThickness, n.source.y1], [n.pos0 + halfThickness, n.source.y1]];\n    return lineGenerator(dots) + 'Z';\n  };\n};\n\nvar SankeyLinks = function SankeyLinks(_ref) {\n  var links = _ref.links,\n      layout = _ref.layout,\n      linkOpacity = _ref.linkOpacity,\n      linkHoverOpacity = _ref.linkHoverOpacity,\n      linkHoverOthersOpacity = _ref.linkHoverOthersOpacity,\n      linkContract = _ref.linkContract,\n      linkBlendMode = _ref.linkBlendMode,\n      enableLinkGradient = _ref.enableLinkGradient,\n      setCurrentLink = _ref.setCurrentLink,\n      currentNode = _ref.currentNode,\n      currentLink = _ref.currentLink,\n      isCurrentLink = _ref.isCurrentLink,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltipFormat = _ref.tooltipFormat,\n      tooltip = _ref.tooltip;\n\n  var getOpacity = function getOpacity(link) {\n    if (!currentNode && !currentLink) return linkOpacity;\n    if (isCurrentLink(link)) return linkHoverOpacity;\n    return linkHoverOthersOpacity;\n  };\n\n  var getLinkPath = layout === 'horizontal' ? sankeyLinkHorizontal() : sankeyLinkVertical();\n  return links.map(function (link) {\n    return React.createElement(SankeyLinksItem$1, {\n      key: \"\".concat(link.source.id, \".\").concat(link.target.id),\n      link: link,\n      layout: layout,\n      path: getLinkPath(link, linkContract),\n      color: link.color,\n      opacity: getOpacity(link),\n      blendMode: linkBlendMode,\n      enableGradient: enableLinkGradient,\n      setCurrent: setCurrentLink,\n      isInteractive: isInteractive,\n      onClick: onClick,\n      tooltip: tooltip,\n      tooltipFormat: tooltipFormat\n    });\n  });\n};\n\nvar SankeyLinks$1 = memo(SankeyLinks);\n\nvar SankeyLabels = function SankeyLabels(_ref) {\n  var nodes = _ref.nodes,\n      layout = _ref.layout,\n      width = _ref.width,\n      height = _ref.height,\n      labelPosition = _ref.labelPosition,\n      labelPadding = _ref.labelPadding,\n      labelOrientation = _ref.labelOrientation,\n      getLabelTextColor = _ref.getLabelTextColor;\n  var theme = useTheme();\n  var labelRotation = labelOrientation === 'vertical' ? -90 : 0;\n  var labels = nodes.map(function (node) {\n    var x;\n    var y;\n    var textAnchor;\n\n    if (layout === 'horizontal') {\n      y = node.y + node.height / 2;\n\n      if (node.x < width / 2) {\n        if (labelPosition === 'inside') {\n          x = node.x1 + labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start';\n        } else {\n          x = node.x - labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end';\n        }\n      } else {\n        if (labelPosition === 'inside') {\n          x = node.x - labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end';\n        } else {\n          x = node.x1 + labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start';\n        }\n      }\n    } else if (layout === 'vertical') {\n      x = node.x + node.width / 2;\n\n      if (node.y < height / 2) {\n        if (labelPosition === 'inside') {\n          y = node.y1 + labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle';\n        } else {\n          y = node.y - labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle';\n        }\n      } else {\n        if (labelPosition === 'inside') {\n          y = node.y - labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle';\n        } else {\n          y = node.y1 + labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle';\n        }\n      }\n    }\n\n    return {\n      id: node.id,\n      label: node.label,\n      x: x,\n      y: y,\n      textAnchor: textAnchor,\n      color: getLabelTextColor(node)\n    };\n  });\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var springs = useSprings(labels.length, labels.map(function (label) {\n    return {\n      transform: \"translate(\".concat(label.x, \", \").concat(label.y, \") rotate(\").concat(labelRotation, \")\"),\n      color: label.color,\n      config: springConfig,\n      immediate: !animate\n    };\n  }));\n  return springs.map(function (animatedProps, index) {\n    var label = labels[index];\n    return React.createElement(animated.text, {\n      key: label.id,\n      dominantBaseline: \"central\",\n      textAnchor: label.textAnchor,\n      transform: animatedProps.transform,\n      style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n        fill: animatedProps.color,\n        pointerEvents: 'none'\n      })\n    }, label.label);\n  });\n};\n\nvar SankeyLabels$1 = memo(SankeyLabels);\n\nvar Sankey = function Sankey(_ref) {\n  var data = _ref.data,\n      layout = _ref.layout,\n      sort = _ref.sort,\n      align = _ref.align,\n      width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      colors = _ref.colors,\n      nodeThickness = _ref.nodeThickness,\n      nodeSpacing = _ref.nodeSpacing,\n      nodeInnerPadding = _ref.nodeInnerPadding,\n      nodeBorderColor = _ref.nodeBorderColor,\n      nodeOpacity = _ref.nodeOpacity,\n      nodeHoverOpacity = _ref.nodeHoverOpacity,\n      nodeHoverOthersOpacity = _ref.nodeHoverOthersOpacity,\n      nodeBorderWidth = _ref.nodeBorderWidth,\n      linkOpacity = _ref.linkOpacity,\n      linkHoverOpacity = _ref.linkHoverOpacity,\n      linkHoverOthersOpacity = _ref.linkHoverOthersOpacity,\n      linkContract = _ref.linkContract,\n      linkBlendMode = _ref.linkBlendMode,\n      enableLinkGradient = _ref.enableLinkGradient,\n      enableLabels = _ref.enableLabels,\n      labelPosition = _ref.labelPosition,\n      labelPadding = _ref.labelPadding,\n      labelOrientation = _ref.labelOrientation,\n      label = _ref.label,\n      labelFormat = _ref.labelFormat,\n      labelTextColor = _ref.labelTextColor,\n      nodeTooltip = _ref.nodeTooltip,\n      linkTooltip = _ref.linkTooltip,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltipFormat = _ref.tooltipFormat,\n      legends = _ref.legends,\n      layers = _ref.layers,\n      role = _ref.role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useSankey = useSankey({\n    data: data,\n    layout: layout,\n    width: innerWidth,\n    height: innerHeight,\n    sort: sort,\n    align: align,\n    colors: colors,\n    nodeThickness: nodeThickness,\n    nodeSpacing: nodeSpacing,\n    nodeInnerPadding: nodeInnerPadding,\n    nodeBorderColor: nodeBorderColor,\n    label: label,\n    labelFormat: labelFormat,\n    labelTextColor: labelTextColor\n  }),\n      nodes = _useSankey.nodes,\n      links = _useSankey.links,\n      legendData = _useSankey.legendData,\n      getNodeBorderColor = _useSankey.getNodeBorderColor,\n      currentNode = _useSankey.currentNode,\n      setCurrentNode = _useSankey.setCurrentNode,\n      currentLink = _useSankey.currentLink,\n      setCurrentLink = _useSankey.setCurrentLink,\n      getLabelTextColor = _useSankey.getLabelTextColor;\n\n  var isCurrentNode = function isCurrentNode() {\n    return false;\n  };\n\n  var isCurrentLink = function isCurrentLink() {\n    return false;\n  };\n\n  if (currentLink) {\n    isCurrentNode = function isCurrentNode(_ref2) {\n      var id = _ref2.id;\n      return id === currentLink.source.id || id === currentLink.target.id;\n    };\n\n    isCurrentLink = function isCurrentLink(_ref3) {\n      var source = _ref3.source,\n          target = _ref3.target;\n      return source.id === currentLink.source.id && target.id === currentLink.target.id;\n    };\n  }\n\n  if (currentNode) {\n    var currentNodeIds = [currentNode.id];\n    links.filter(function (_ref4) {\n      var source = _ref4.source,\n          target = _ref4.target;\n      return source.id === currentNode.id || target.id === currentNode.id;\n    }).forEach(function (_ref5) {\n      var source = _ref5.source,\n          target = _ref5.target;\n      currentNodeIds.push(source.id);\n      currentNodeIds.push(target.id);\n    });\n    currentNodeIds = _uniq(currentNodeIds);\n\n    isCurrentNode = function isCurrentNode(_ref6) {\n      var id = _ref6.id;\n      return currentNodeIds.includes(id);\n    };\n\n    isCurrentLink = function isCurrentLink(_ref7) {\n      var source = _ref7.source,\n          target = _ref7.target;\n      return source.id === currentNode.id || target.id === currentNode.id;\n    };\n  }\n\n  var layerProps = {\n    links: links,\n    nodes: nodes,\n    margin: margin,\n    width: width,\n    height: height,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight\n  };\n  var layerById = {\n    links: React.createElement(SankeyLinks$1, {\n      key: \"links\",\n      links: links,\n      layout: layout,\n      linkContract: linkContract,\n      linkOpacity: linkOpacity,\n      linkHoverOpacity: linkHoverOpacity,\n      linkHoverOthersOpacity: linkHoverOthersOpacity,\n      linkBlendMode: linkBlendMode,\n      enableLinkGradient: enableLinkGradient,\n      setCurrentLink: setCurrentLink,\n      currentNode: currentNode,\n      currentLink: currentLink,\n      isCurrentLink: isCurrentLink,\n      isInteractive: isInteractive,\n      onClick: onClick,\n      tooltip: linkTooltip,\n      tooltipFormat: tooltipFormat\n    }),\n    nodes: React.createElement(SankeyNodes$1, {\n      key: \"nodes\",\n      nodes: nodes,\n      nodeOpacity: nodeOpacity,\n      nodeHoverOpacity: nodeHoverOpacity,\n      nodeHoverOthersOpacity: nodeHoverOthersOpacity,\n      nodeBorderWidth: nodeBorderWidth,\n      getNodeBorderColor: getNodeBorderColor,\n      setCurrentNode: setCurrentNode,\n      currentNode: currentNode,\n      currentLink: currentLink,\n      isCurrentNode: isCurrentNode,\n      isInteractive: isInteractive,\n      onClick: onClick,\n      tooltip: nodeTooltip,\n      tooltipFormat: tooltipFormat\n    }),\n    labels: null,\n    legends: legends.map(function (legend, i) {\n      return React.createElement(BoxLegendSvg, Object.assign({\n        key: \"legend\".concat(i)\n      }, legend, {\n        containerWidth: innerWidth,\n        containerHeight: innerHeight,\n        data: legendData\n      }));\n    })\n  };\n\n  if (enableLabels) {\n    layerById.labels = React.createElement(SankeyLabels$1, {\n      key: \"labels\",\n      nodes: nodes,\n      layout: layout,\n      width: innerWidth,\n      height: innerHeight,\n      labelPosition: labelPosition,\n      labelPadding: labelPadding,\n      labelOrientation: labelOrientation,\n      getLabelTextColor: getLabelTextColor\n    });\n  }\n\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, layer(layerProps));\n    }\n\n    return layerById[layer];\n  }));\n};\n\nvar WrappedSankey = withContainer(Sankey);\nWrappedSankey.defaultProps = SankeyDefaultProps;\n\nvar ResponsiveSankey = function ResponsiveSankey(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(WrappedSankey, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { ResponsiveSankey, WrappedSankey as Sankey, SankeyDefaultProps, SankeyPropTypes, sankeyAlignmentFromProp, sankeyAlignmentPropKeys, sankeyAlignmentPropMapping, sankeyAlignmentPropType };","map":{"version":3,"mappings":"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","names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","sankeyAlignmentPropMapping","center","sankeyCenter","justify","sankeyJustify","start","sankeyLeft","end","sankeyRight","sankeyAlignmentPropKeys","sankeyAlignmentPropType","PropTypes","oneOf","sankeyAlignmentFromProp","prop","SankeyPropTypes","data","shape","nodes","arrayOf","id","oneOfType","string","number","isRequired","links","layout","align","sort","func","colors","ordinalColorsPropType","nodeOpacity","nodeHoverOpacity","nodeHoverOthersOpacity","nodeThickness","nodeSpacing","nodeInnerPadding","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","linkOpacity","linkHoverOpacity","linkHoverOthersOpacity","linkContract","linkBlendMode","blendModePropType","enableLinkGradient","bool","enableLabels","labelPosition","labelPadding","labelOrientation","labelTextColor","label","labelFormat","nodeTooltip","linkTooltip","isInteractive","onClick","tooltipFormat","legends","LegendPropShape","layers","role","motionPropTypes","SankeyDefaultProps","scheme","from","modifiers","noop","animate","motionConfig","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getId","d","computeNodeAndLinks","_data","alignFunction","sortFunction","linkSortMode","width","height","getColor","getLinkColor","getLabel","sankey","d3Sankey","nodeAlign","nodeSort","linkSort","nodeWidth","nodePadding","size","nodeId","_cloneDeep","node","color","x","x0","y","y0","Math","max","x1","y1","oldX0","oldX1","link","pos0","pos1","thickness","useSankey","useState","currentNode","setCurrentNode","currentLink","setCurrentLink","useMemo","a","b","theme","useTheme","useOrdinalColorScale","getNodeBorderColor","useInheritedColor","getLabelGenerator","getLabelTextColor","legendData","map","SankeyNodesItem","opacity","borderWidth","borderColor","setCurrent","tooltip","useMotionConfig","springConfig","config","animatedProps","useSpring","immediate","useTooltip","showTooltipFromEvent","hideTooltip","tooltipContent","React","BasicTooltip","enableChip","handleMouseEnter","useCallback","event","handleMouseMove","handleMouseLeave","handleClick","animated","rect","to","v","fill","fillOpacity","strokeWidth","stroke","strokeOpacity","onMouseEnter","onMouseMove","onMouseLeave","memo","SankeyNodes","isCurrentNode","getOpacity","SankeyLinkGradient","startColor","endColor","gradientProps","x2","y2","spreadMethod","offset","stopColor","displayName","tooltipStyles","container","display","alignItems","sourceChip","marginRight","targetChip","marginLeft","TooltipContent","format","style","Chip","SankeyLinksItem","path","blendMode","enableGradient","linkId","animatedPath","useAnimatedPath","encodeURI","mixBlendMode","sankeyLinkHorizontal","lineGenerator","line","curve","curveMonotoneX","contract","halfThickness","linkLength","padLength","dots","sankeyLinkVertical","curveMonotoneY","SankeyLinks","isCurrentLink","getLinkPath","SankeyLabels","labelRotation","labels","textAnchor","springs","useSprings","transform","index","text","dominantBaseline","pointerEvents","Sankey","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","currentNodeIds","_uniq","includes","layerProps","layerById","legend","BoxLegendSvg","containerWidth","containerHeight","SvgWrapper","layer","Fragment","WrappedSankey","withContainer","defaultProps","ResponsiveSankey","ResponsiveWrapper","props"],"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/hooks.js","../src/SankeyNodesItem.js","../src/SankeyNodes.js","../src/SankeyLinkGradient.js","../src/SankeyLinksItem.js","../src/links.js","../src/SankeyLinks.js","../src/SankeyLabels.js","../src/Sankey.js","../src/ResponsiveSankey.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { sankeyCenter, sankeyJustify, sankeyLeft, sankeyRight } from 'd3-sankey'\nimport { noop, blendModePropType, motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\n\nexport const sankeyAlignmentPropMapping = {\n    center: sankeyCenter,\n    justify: sankeyJustify,\n    start: sankeyLeft,\n    end: sankeyRight,\n}\n\nexport const sankeyAlignmentPropKeys = Object.keys(sankeyAlignmentPropMapping)\n\nexport const sankeyAlignmentPropType = PropTypes.oneOf(sankeyAlignmentPropKeys)\n\nexport const sankeyAlignmentFromProp = prop => sankeyAlignmentPropMapping[prop]\n\nexport const SankeyPropTypes = {\n    data: PropTypes.shape({\n        nodes: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            })\n        ).isRequired,\n        links: PropTypes.arrayOf(\n            PropTypes.shape({\n                source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n                target: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            })\n        ).isRequired,\n    }).isRequired,\n\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    align: sankeyAlignmentPropType.isRequired,\n    sort: PropTypes.oneOfType([\n        PropTypes.oneOf(['auto', 'input', 'ascending', 'descending']),\n        PropTypes.func,\n    ]).isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n\n    nodeOpacity: PropTypes.number.isRequired,\n    nodeHoverOpacity: PropTypes.number.isRequired,\n    nodeHoverOthersOpacity: PropTypes.number.isRequired,\n    nodeThickness: PropTypes.number.isRequired,\n    nodeSpacing: PropTypes.number.isRequired,\n    nodeInnerPadding: PropTypes.number.isRequired,\n    nodeBorderWidth: PropTypes.number.isRequired,\n    nodeBorderColor: inheritedColorPropType,\n\n    linkOpacity: PropTypes.number.isRequired,\n    linkHoverOpacity: PropTypes.number.isRequired,\n    linkHoverOthersOpacity: PropTypes.number.isRequired,\n    linkContract: PropTypes.number.isRequired,\n    linkBlendMode: blendModePropType.isRequired,\n    enableLinkGradient: PropTypes.bool.isRequired,\n\n    enableLabels: PropTypes.bool.isRequired,\n    labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n    labelPadding: PropTypes.number.isRequired,\n    labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    labelTextColor: inheritedColorPropType,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n    nodeTooltip: PropTypes.func,\n    linkTooltip: PropTypes.func,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['links', 'nodes', 'labels', 'legends']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    role: PropTypes.string.isRequired,\n\n    ...motionPropTypes,\n}\n\nexport const SankeyDefaultProps = {\n    layout: 'horizontal',\n    align: 'center',\n    sort: 'auto',\n\n    colors: { scheme: 'nivo' },\n\n    nodeOpacity: 0.75,\n    nodeHoverOpacity: 1,\n    nodeHoverOthersOpacity: 0.15,\n    nodeThickness: 12,\n    nodeSpacing: 12,\n    nodeInnerPadding: 0,\n    nodeBorderWidth: 1,\n    nodeBorderColor: { from: 'color', modifiers: [['darker', 0.5]] },\n\n    linkOpacity: 0.25,\n    linkHoverOpacity: 0.6,\n    linkHoverOthersOpacity: 0.15,\n    linkContract: 0,\n    linkBlendMode: 'multiply',\n    enableLinkGradient: false,\n\n    enableLabels: true,\n    label: 'id',\n    labelPosition: 'inside',\n    labelPadding: 9,\n    labelOrientation: 'horizontal',\n    labelTextColor: { from: 'color', modifiers: [['darker', 0.8]] },\n\n    isInteractive: true,\n    onClick: noop,\n\n    legends: [],\n\n    layers: ['links', 'nodes', 'labels', 'legends'],\n\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { useState, useMemo } from 'react'\nimport { cloneDeep } from 'lodash'\nimport { sankey as d3Sankey } from 'd3-sankey'\nimport { useTheme, getLabelGenerator } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { sankeyAlignmentFromProp } from './props'\n\nconst getId = d => d.id\n\nexport const computeNodeAndLinks = ({\n    data: _data,\n    layout,\n    alignFunction,\n    sortFunction,\n    linkSortMode,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    width,\n    height,\n    getColor,\n    getLinkColor,\n    getLabel,\n}) => {\n    const sankey = d3Sankey()\n        .nodeAlign(alignFunction)\n        .nodeSort(sortFunction)\n        .linkSort(linkSortMode)\n        .nodeWidth(nodeThickness)\n        .nodePadding(nodeSpacing)\n        .size(layout === 'horizontal' ? [width, height] : [height, width])\n        .nodeId(getId)\n\n    // deep clone is required as the sankey diagram mutates data\n    // we need a different identity for correct updates\n    const data = cloneDeep(_data)\n    sankey(data)\n\n    data.nodes.forEach(node => {\n        node.color = getColor(node)\n        node.label = getLabel(node)\n        if (layout === 'horizontal') {\n            node.x = node.x0 + nodeInnerPadding\n            node.y = node.y0\n            node.width = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n            node.height = Math.max(node.y1 - node.y0, 0)\n        } else {\n            node.x = node.y0\n            node.y = node.x0 + nodeInnerPadding\n            node.width = Math.max(node.y1 - node.y0, 0)\n            node.height = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n\n            const oldX0 = node.x0\n            const oldX1 = node.x1\n\n            node.x0 = node.y0\n            node.x1 = node.y1\n            node.y0 = oldX0\n            node.y1 = oldX1\n        }\n    })\n\n    data.links.forEach(link => {\n        link.color = getLinkColor(link)\n        link.pos0 = link.y0\n        link.pos1 = link.y1\n        link.thickness = link.width\n        delete link.y0\n        delete link.y1\n        delete link.width\n    })\n\n    return data\n}\n\nexport const useSankey = ({\n    data,\n    layout,\n    width,\n    height,\n    sort,\n    align,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    label,\n    labelFormat,\n    labelTextColor,\n}) => {\n    const [currentNode, setCurrentNode] = useState(null)\n    const [currentLink, setCurrentLink] = useState(null)\n\n    const sortFunction = useMemo(() => {\n        if (sort === 'auto') return undefined\n        if (sort === 'input') return null\n        if (sort === 'ascending') return (a, b) => a.value - b.value\n        if (sort === 'descending') return (a, b) => b.value - a.value\n\n        return sort\n    }, [sort])\n\n    // If \"input\" sorting is used, apply this setting to links, too.\n    // (In d3, `null` means input sorting and `undefined` is the default)\n    const linkSortMode = sort === 'input' ? null : undefined\n\n    const alignFunction = useMemo(() => sankeyAlignmentFromProp(align), [align])\n\n    const theme = useTheme()\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getNodeBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkColor = useOrdinalColorScale(colors, 'source.id')\n\n    const getLabel = useMemo(() => getLabelGenerator(label, labelFormat), [label, labelFormat])\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n\n    const { nodes, links } = useMemo(\n        () =>\n            computeNodeAndLinks({\n                data,\n                layout,\n                alignFunction,\n                sortFunction,\n                linkSortMode,\n                nodeThickness,\n                nodeSpacing,\n                nodeInnerPadding,\n                width,\n                height,\n                getColor,\n                getLinkColor,\n                getLabel,\n            }),\n        [\n            data,\n            layout,\n            alignFunction,\n            sortFunction,\n            linkSortMode,\n            nodeThickness,\n            nodeSpacing,\n            nodeInnerPadding,\n            width,\n            height,\n            getColor,\n            getLinkColor,\n            getLabel,\n        ]\n    )\n\n    const legendData = useMemo(\n        () =>\n            nodes.map(node => ({\n                id: node.id,\n                label: node.label,\n                color: node.color,\n            })),\n        [nodes]\n    )\n\n    return {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated, to } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { BasicTooltip, useTooltip } from '@nivo/tooltip'\n\nconst SankeyNodesItem = ({\n    node,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    setCurrent,\n    isInteractive,\n    onClick,\n    tooltip,\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        width,\n        height,\n        opacity,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipContent = useMemo(() => {\n        if (tooltip) {\n            return <BasicTooltip id={tooltip(node)} enableChip={false} />\n        }\n\n        return <BasicTooltip id={node.label} enableChip={true} color={node.color} />\n    }, [tooltip, node])\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(node)\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [setCurrent, node, showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick(node, event)\n        },\n        [onClick, node]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            width={to(animatedProps.width, v => Math.max(v, 0))}\n            height={to(animatedProps.height, v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            fillOpacity={animatedProps.opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            strokeOpacity={opacity}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nSankeyNodesItem.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(SankeyNodesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SankeyNodesItem from './SankeyNodesItem'\n\nconst SankeyNodes = ({\n    nodes,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    nodeBorderWidth,\n    getNodeBorderColor,\n    setCurrentNode,\n    currentNode,\n    currentLink,\n    isCurrentNode,\n    isInteractive,\n    onClick,\n    tooltip,\n}) => {\n    const getOpacity = node => {\n        if (!currentNode && !currentLink) return nodeOpacity\n        if (isCurrentNode(node)) return nodeHoverOpacity\n        return nodeHoverOthersOpacity\n    }\n\n    return nodes.map(node => (\n        <SankeyNodesItem\n            key={node.id}\n            node={node}\n            x={node.x}\n            y={node.y}\n            width={node.width}\n            height={node.height}\n            color={node.color}\n            opacity={getOpacity(node)}\n            borderWidth={nodeBorderWidth}\n            borderColor={getNodeBorderColor(node)}\n            setCurrent={setCurrentNode}\n            isInteractive={isInteractive}\n            onClick={onClick}\n            tooltip={tooltip}\n        />\n    ))\n}\n\nSankeyNodes.propTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n            height: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    nodeOpacity: PropTypes.number.isRequired,\n    nodeHoverOpacity: PropTypes.number.isRequired,\n    nodeHoverOthersOpacity: PropTypes.number.isRequired,\n    nodeBorderWidth: PropTypes.number.isRequired,\n    getNodeBorderColor: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n    setCurrentNode: PropTypes.func.isRequired,\n    currentNode: PropTypes.object,\n    currentLink: PropTypes.object,\n    isCurrentNode: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst SankeyLinkGradient = memo(({ id, layout, startColor, endColor }) => {\n    const gradientProps = {}\n    if (layout === 'horizontal') {\n        gradientProps.x1 = '0%'\n        gradientProps.x2 = '100%'\n        gradientProps.y1 = '0%'\n        gradientProps.y2 = '0%'\n    } else {\n        gradientProps.x1 = '0%'\n        gradientProps.x2 = '0%'\n        gradientProps.y1 = '0%'\n        gradientProps.y2 = '100%'\n    }\n\n    return (\n        <linearGradient id={id} spreadMethod=\"pad\" {...gradientProps}>\n            <stop offset=\"0%\" stopColor={startColor} />\n            <stop offset=\"100%\" stopColor={endColor} />\n        </linearGradient>\n    )\n})\n\nSankeyLinkGradient.propTypes = {\n    id: PropTypes.string.isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    startColor: PropTypes.string.isRequired,\n    endColor: PropTypes.string.isRequired,\n}\n\nSankeyLinkGradient.displayName = 'SankeyLinkGradient'\n\nexport default SankeyLinkGradient\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { blendModePropType, useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { BasicTooltip, Chip, useTooltip } from '@nivo/tooltip'\nimport SankeyLinkGradient from './SankeyLinkGradient'\n\nconst tooltipStyles = {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    sourceChip: {\n        marginRight: 7,\n    },\n    targetChip: {\n        marginLeft: 7,\n        marginRight: 7,\n    },\n}\n\nconst TooltipContent = ({ link, format }) => (\n    <span style={tooltipStyles.container}>\n        <Chip color={link.source.color} style={tooltipStyles.sourceChip} />\n        <strong>{link.source.label}</strong>\n        {' > '}\n        <strong>{link.target.label}</strong>\n        <Chip color={link.target.color} style={tooltipStyles.targetChip} />\n        <strong>{format ? format(link.value) : link.value}</strong>\n    </span>\n)\n\nTooltipContent.propTypes = {\n    link: PropTypes.shape({\n        source: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        target: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        color: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n}\n\nconst SankeyLinksItem = ({\n    link,\n    layout,\n    path,\n    color,\n    opacity,\n    blendMode,\n    enableGradient,\n    setCurrent,\n    tooltip,\n    tooltipFormat,\n    isInteractive,\n    onClick,\n}) => {\n    const linkId = `${link.source.id}.${link.target.id}`\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipContent = useMemo(() => {\n        if (tooltip) {\n            return <BasicTooltip id={tooltip(link)} enableChip={false} />\n        }\n\n        return <BasicTooltip id={<TooltipContent format={tooltipFormat} link={link} />} />\n    }, [tooltip, tooltipFormat, link])\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(link)\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [setCurrent, link, showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick(link, event)\n        },\n        [onClick, link]\n    )\n\n    return (\n        <>\n            {enableGradient && (\n                <SankeyLinkGradient\n                    id={linkId}\n                    layout={layout}\n                    startColor={link.startColor || link.source.color}\n                    endColor={link.endColor || link.target.color}\n                />\n            )}\n            <animated.path\n                fill={enableGradient ? `url(\"#${encodeURI(linkId)}\")` : animatedProps.color}\n                d={animatedPath}\n                fillOpacity={animatedProps.opacity}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                style={{ mixBlendMode: blendMode }}\n            />\n        </>\n    )\n}\n\nSankeyLinksItem.propTypes = {\n    link: PropTypes.shape({\n        source: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        target: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        color: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n        startColor: PropTypes.string,\n        endColor: PropTypes.string,\n    }).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    path: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n    enableGradient: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n}\n\nexport default memo(SankeyLinksItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { line, curveMonotoneX, curveMonotoneY } from 'd3-shape'\n\nexport const sankeyLinkHorizontal = () => {\n    const lineGenerator = line().curve(curveMonotoneX)\n\n    return (n, contract) => {\n        const thickness = Math.max(1, n.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = n.target.x0 - n.source.x1\n        const padLength = linkLength * 0.12\n\n        const dots = [\n            [n.source.x1, n.pos0 - halfThickness],\n            [n.source.x1 + padLength, n.pos0 - halfThickness],\n            [n.target.x0 - padLength, n.pos1 - halfThickness],\n            [n.target.x0, n.pos1 - halfThickness],\n            [n.target.x0, n.pos1 + halfThickness],\n            [n.target.x0 - padLength, n.pos1 + halfThickness],\n            [n.source.x1 + padLength, n.pos0 + halfThickness],\n            [n.source.x1, n.pos0 + halfThickness],\n            [n.source.x1, n.pos0 - halfThickness],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n\nexport const sankeyLinkVertical = () => {\n    const lineGenerator = line().curve(curveMonotoneY)\n\n    return (n, contract) => {\n        const thickness = Math.max(1, n.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = n.target.y0 - n.source.y1\n        const padLength = linkLength * 0.12\n\n        const dots = [\n            [n.pos0 + halfThickness, n.source.y1],\n            [n.pos0 + halfThickness, n.source.y1 + padLength],\n            [n.pos1 + halfThickness, n.target.y0 - padLength],\n            [n.pos1 + halfThickness, n.target.y0],\n            [n.pos1 - halfThickness, n.target.y0],\n            [n.pos1 - halfThickness, n.target.y0 - padLength],\n            [n.pos0 - halfThickness, n.source.y1 + padLength],\n            [n.pos0 - halfThickness, n.source.y1],\n            [n.pos0 + halfThickness, n.source.y1],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@nivo/core'\nimport SankeyLinksItem from './SankeyLinksItem'\nimport { sankeyLinkHorizontal, sankeyLinkVertical } from './links'\n\nconst SankeyLinks = ({\n    links,\n    layout,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    setCurrentLink,\n    currentNode,\n    currentLink,\n    isCurrentLink,\n    isInteractive,\n    onClick,\n    tooltipFormat,\n    tooltip,\n}) => {\n    const getOpacity = link => {\n        if (!currentNode && !currentLink) return linkOpacity\n        if (isCurrentLink(link)) return linkHoverOpacity\n        return linkHoverOthersOpacity\n    }\n\n    const getLinkPath = layout === 'horizontal' ? sankeyLinkHorizontal() : sankeyLinkVertical()\n\n    return links.map(link => (\n        <SankeyLinksItem\n            key={`${link.source.id}.${link.target.id}`}\n            link={link}\n            layout={layout}\n            path={getLinkPath(link, linkContract)}\n            color={link.color}\n            opacity={getOpacity(link)}\n            blendMode={linkBlendMode}\n            enableGradient={enableLinkGradient}\n            setCurrent={setCurrentLink}\n            isInteractive={isInteractive}\n            onClick={onClick}\n            tooltip={tooltip}\n            tooltipFormat={tooltipFormat}\n        />\n    ))\n}\n\nSankeyLinks.propTypes = {\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            }).isRequired,\n            target: PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            }).isRequired,\n            thickness: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    linkOpacity: PropTypes.number.isRequired,\n    linkHoverOpacity: PropTypes.number.isRequired,\n    linkHoverOthersOpacity: PropTypes.number.isRequired,\n    linkContract: PropTypes.number.isRequired,\n    linkBlendMode: blendModePropType.isRequired,\n    enableLinkGradient: PropTypes.bool.isRequired,\n    tooltip: PropTypes.func,\n    setCurrentLink: PropTypes.func.isRequired,\n    currentLink: PropTypes.object,\n    isCurrentLink: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\nconst SankeyLabels = ({\n    nodes,\n    layout,\n    width,\n    height,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    getLabelTextColor,\n}) => {\n    const theme = useTheme()\n\n    const labelRotation = labelOrientation === 'vertical' ? -90 : 0\n    const labels = nodes.map(node => {\n        let x\n        let y\n        let textAnchor\n        if (layout === 'horizontal') {\n            y = node.y + node.height / 2\n            if (node.x < width / 2) {\n                if (labelPosition === 'inside') {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                } else {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                } else {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                }\n            }\n        } else if (layout === 'vertical') {\n            x = node.x + node.width / 2\n            if (node.y < height / 2) {\n                if (labelPosition === 'inside') {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                } else {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                } else {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                }\n            }\n        }\n\n        return {\n            id: node.id,\n            label: node.label,\n            x,\n            y,\n            textAnchor,\n            color: getLabelTextColor(node),\n        }\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y}) rotate(${labelRotation})`,\n            color: label.color,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                dominantBaseline=\"central\"\n                textAnchor={label.textAnchor}\n                transform={animatedProps.transform}\n                style={{\n                    ...theme.labels.text,\n                    fill: animatedProps.color,\n                    pointerEvents: 'none',\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nSankeyLabels.propTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            x1: PropTypes.number.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n            height: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n    labelPadding: PropTypes.number.isRequired,\n    labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    getLabelTextColor: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment } from 'react'\nimport { uniq } from 'lodash'\nimport { SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { SankeyDefaultProps, SankeyPropTypes } from './props'\nimport { useSankey } from './hooks'\nimport SankeyNodes from './SankeyNodes'\nimport SankeyLinks from './SankeyLinks'\nimport SankeyLabels from './SankeyLabels'\n\nconst Sankey = ({\n    data,\n    layout,\n    sort,\n    align,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    nodeBorderWidth,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    enableLabels,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    label,\n    labelFormat,\n    labelTextColor,\n    nodeTooltip,\n    linkTooltip,\n    isInteractive,\n    onClick,\n    tooltipFormat,\n    legends,\n    layers,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    } = useSankey({\n        data,\n        layout,\n        width: innerWidth,\n        height: innerHeight,\n        sort,\n        align,\n        colors,\n        nodeThickness,\n        nodeSpacing,\n        nodeInnerPadding,\n        nodeBorderColor,\n        label,\n        labelFormat,\n        labelTextColor,\n    })\n\n    let isCurrentNode = () => false\n    let isCurrentLink = () => false\n\n    if (currentLink) {\n        isCurrentNode = ({ id }) => id === currentLink.source.id || id === currentLink.target.id\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentLink.source.id && target.id === currentLink.target.id\n    }\n\n    if (currentNode) {\n        let currentNodeIds = [currentNode.id]\n        links\n            .filter(\n                ({ source, target }) => source.id === currentNode.id || target.id === currentNode.id\n            )\n            .forEach(({ source, target }) => {\n                currentNodeIds.push(source.id)\n                currentNodeIds.push(target.id)\n            })\n\n        currentNodeIds = uniq(currentNodeIds)\n        isCurrentNode = ({ id }) => currentNodeIds.includes(id)\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentNode.id || target.id === currentNode.id\n    }\n\n    const layerProps = {\n        links,\n        nodes,\n        margin,\n        width,\n        height,\n        outerWidth,\n        outerHeight,\n    }\n\n    const layerById = {\n        links: (\n            <SankeyLinks\n                key=\"links\"\n                links={links}\n                layout={layout}\n                linkContract={linkContract}\n                linkOpacity={linkOpacity}\n                linkHoverOpacity={linkHoverOpacity}\n                linkHoverOthersOpacity={linkHoverOthersOpacity}\n                linkBlendMode={linkBlendMode}\n                enableLinkGradient={enableLinkGradient}\n                setCurrentLink={setCurrentLink}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentLink={isCurrentLink}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={linkTooltip}\n                tooltipFormat={tooltipFormat}\n            />\n        ),\n        nodes: (\n            <SankeyNodes\n                key=\"nodes\"\n                nodes={nodes}\n                nodeOpacity={nodeOpacity}\n                nodeHoverOpacity={nodeHoverOpacity}\n                nodeHoverOthersOpacity={nodeHoverOthersOpacity}\n                nodeBorderWidth={nodeBorderWidth}\n                getNodeBorderColor={getNodeBorderColor}\n                setCurrentNode={setCurrentNode}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentNode={isCurrentNode}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={nodeTooltip}\n                tooltipFormat={tooltipFormat}\n            />\n        ),\n        labels: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legendData}\n            />\n        )),\n    }\n\n    if (enableLabels) {\n        layerById.labels = (\n            <SankeyLabels\n                key=\"labels\"\n                nodes={nodes}\n                layout={layout}\n                width={innerWidth}\n                height={innerHeight}\n                labelPosition={labelPosition}\n                labelPadding={labelPadding}\n                labelOrientation={labelOrientation}\n                getLabelTextColor={getLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{layer(layerProps)}</Fragment>\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nSankey.propTypes = SankeyPropTypes\n\nconst WrappedSankey = withContainer(Sankey)\nWrappedSankey.defaultProps = SankeyDefaultProps\n\nexport default WrappedSankey\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Sankey from './Sankey'\n\nconst ResponsiveSankey = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Sankey width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveSankey\n"]},"metadata":{},"sourceType":"module"}