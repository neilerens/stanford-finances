{"ast":null,"code":"import _toConsumableArray from \"/Users/neilrens/Desktop/finances2/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar updateQueue = makeQueue();\n\nvar raf = function raf(fn) {\n  return schedule(fn, updateQueue);\n};\n\nvar writeQueue = makeQueue();\n\nraf.write = function (fn) {\n  return schedule(fn, writeQueue);\n};\n\nvar onStartQueue = makeQueue();\n\nraf.onStart = function (fn) {\n  return schedule(fn, onStartQueue);\n};\n\nvar onFrameQueue = makeQueue();\n\nraf.onFrame = function (fn) {\n  return schedule(fn, onFrameQueue);\n};\n\nvar onFinishQueue = makeQueue();\n\nraf.onFinish = function (fn) {\n  return schedule(fn, onFinishQueue);\n};\n\nvar timeouts = [];\n\nraf.setTimeout = function (handler, ms) {\n  var time = raf.now() + ms;\n\n  var cancel = function cancel() {\n    var i = timeouts.findIndex(function (t) {\n      return t.cancel == cancel;\n    });\n    if (~i) timeouts.splice(i, 1);\n    __raf.count -= ~i ? 1 : 0;\n  };\n\n  var timeout = {\n    time: time,\n    handler: handler,\n    cancel: cancel\n  };\n  timeouts.splice(findTimeout(time), 0, timeout);\n  __raf.count += 1;\n  start();\n  return timeout;\n};\n\nvar findTimeout = function findTimeout(time) {\n  return ~(~timeouts.findIndex(function (t) {\n    return t.time > time;\n  }) || ~timeouts.length);\n};\n\nraf.cancel = function (fn) {\n  updateQueue.delete(fn);\n  writeQueue.delete(fn);\n};\n\nraf.sync = function (fn) {\n  sync = true;\n  raf.batchedUpdates(fn);\n  sync = false;\n};\n\nraf.throttle = function (fn) {\n  var lastArgs;\n\n  function queuedFn() {\n    try {\n      fn.apply(void 0, _toConsumableArray(lastArgs));\n    } finally {\n      lastArgs = null;\n    }\n  }\n\n  function throttled() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n    raf.onStart(queuedFn);\n  }\n\n  throttled.handler = fn;\n\n  throttled.cancel = function () {\n    onStartQueue.delete(queuedFn);\n    lastArgs = null;\n  };\n\n  return throttled;\n};\n\nvar nativeRaf = typeof window != \"undefined\" ? window.requestAnimationFrame : function () {};\n\nraf.use = function (impl) {\n  return nativeRaf = impl;\n};\n\nraf.now = typeof performance != \"undefined\" ? function () {\n  return performance.now();\n} : Date.now;\n\nraf.batchedUpdates = function (fn) {\n  return fn();\n};\n\nraf.catch = console.error;\nvar ts = -1;\nvar sync = false;\n\nfunction schedule(fn, queue) {\n  if (sync) {\n    queue.delete(fn);\n    fn(0);\n  } else {\n    queue.add(fn);\n    start();\n  }\n}\n\nfunction start() {\n  if (ts < 0) {\n    ts = 0;\n    nativeRaf(loop);\n  }\n}\n\nfunction loop() {\n  if (~ts) {\n    nativeRaf(loop);\n    raf.batchedUpdates(update);\n  }\n}\n\nfunction update() {\n  var prevTs = ts;\n  ts = raf.now();\n  var count = findTimeout(ts);\n\n  if (count) {\n    eachSafely(timeouts.splice(0, count), function (t) {\n      return t.handler();\n    });\n    __raf.count -= count;\n  }\n\n  onStartQueue.flush();\n  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667);\n  onFrameQueue.flush();\n  writeQueue.flush();\n  onFinishQueue.flush();\n}\n\nfunction makeQueue() {\n  var next = new Set();\n  var current = next;\n  return {\n    add: function add(fn) {\n      __raf.count += current == next && !next.has(fn) ? 1 : 0;\n      next.add(fn);\n    },\n    delete: function _delete(fn) {\n      __raf.count -= current == next && next.has(fn) ? 1 : 0;\n      return next.delete(fn);\n    },\n    flush: function flush(arg) {\n      if (current.size) {\n        next = new Set();\n        __raf.count -= current.size;\n        eachSafely(current, function (fn) {\n          return fn(arg) && next.add(fn);\n        });\n        __raf.count += next.size;\n        current = next;\n      }\n    }\n  };\n}\n\nfunction eachSafely(values, each) {\n  values.forEach(function (value) {\n    try {\n      each(value);\n    } catch (e) {\n      raf.catch(e);\n    }\n  });\n}\n\nvar __raf = {\n  count: 0,\n  clear: function clear() {\n    ts = -1;\n    timeouts = [];\n    onStartQueue = makeQueue();\n    updateQueue = makeQueue();\n    onFrameQueue = makeQueue();\n    writeQueue = makeQueue();\n    onFinishQueue = makeQueue();\n    __raf.count = 0;\n  }\n};\nexport { __raf, raf };","map":{"version":3,"mappings":"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","names":["updateQueue","makeQueue","schedule","fn","raf","write","writeQueue","onStart","onStartQueue","onFrame","onFrameQueue","onFinish","onFinishQueue","setTimeout","now","ms","cancel","timeouts","findIndex","t","i","splice","__raf","count","time","handler","findTimeout","timeout","start","length","delete","sync","batchedUpdates","throttle","lastArgs","args","queuedFn","throttled","window","requestAnimationFrame","use","nativeRaf","impl","performance","Date","catch","console","error","queue","add","ts","loop","update","eachSafely","flush","prevTs","Math","min","Set","next","current","has","arg","size","values","forEach","each","value","e","clear"],"sources":["../src/raf.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}