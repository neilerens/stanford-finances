{"ast":null,"code":"import React, { useMemo, useCallback, createElement } from 'react';\nimport { radiansToDegrees, midAngle, positionFromAngle, useMotionConfig, useTheme, usePropertyAccessor, textPropsByEngine, degreesToRadians, getDistance, getAngle } from '@nivo/core';\nimport { useInheritedColor } from '@nivo/colors';\nimport { to, useTransition, animated, useSpring } from 'react-spring';\nimport { line, arc } from 'd3-shape';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getNormalizedAngle = function getNormalizedAngle(angle) {\n  var normalizedAngle = angle % (Math.PI * 2);\n\n  if (normalizedAngle < 0) {\n    normalizedAngle += Math.PI * 2;\n  }\n\n  return normalizedAngle;\n};\n\nvar filterDataBySkipAngle = function filterDataBySkipAngle(data, skipAngle) {\n  return data.filter(function (datum) {\n    return Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle;\n  });\n};\n\nvar useFilteredDataBySkipAngle = function useFilteredDataBySkipAngle(data, skipAngle) {\n  return useMemo(function () {\n    return filterDataBySkipAngle(data, skipAngle);\n  }, [data, skipAngle]);\n};\n\nvar arcTransitionModes = ['startAngle', 'middleAngle', 'endAngle', 'innerRadius', 'centerRadius', 'outerRadius', 'pushIn', 'pushOut'];\nvar arcTransitionModeById = {\n  startAngle: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        endAngle: arc.startAngle\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        startAngle: arc.endAngle\n      });\n    }\n  },\n  middleAngle: {\n    enter: function enter(arc) {\n      var middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2;\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        startAngle: middleAngle,\n        endAngle: middleAngle\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      var middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2;\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        startAngle: middleAngle,\n        endAngle: middleAngle\n      });\n    }\n  },\n  endAngle: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        startAngle: arc.endAngle\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        endAngle: arc.startAngle\n      });\n    }\n  },\n  innerRadius: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        outerRadius: arc.innerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.outerRadius\n      });\n    }\n  },\n  centerRadius: {\n    enter: function enter(arc) {\n      var centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2;\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: centerRadius,\n        outerRadius: centerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      var centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2;\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: centerRadius,\n        outerRadius: centerRadius\n      });\n    }\n  },\n  outerRadius: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.outerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        outerRadius: arc.innerRadius\n      });\n    }\n  },\n  pushIn: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n        outerRadius: arc.innerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.outerRadius,\n        outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius\n      });\n    }\n  },\n  pushOut: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.outerRadius,\n        outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n        outerRadius: arc.innerRadius\n      });\n    }\n  }\n};\n\nvar useArcTransitionMode = function useArcTransitionMode(mode, extraTransition) {\n  return useMemo(function () {\n    var transitionMode = arcTransitionModeById[mode];\n    return {\n      enter: function enter(datum) {\n        return _objectSpread2(_objectSpread2({\n          progress: 0\n        }, transitionMode.enter(datum.arc)), extraTransition ? extraTransition.enter(datum) : {});\n      },\n      update: function update(datum) {\n        return _objectSpread2(_objectSpread2({\n          progress: 1\n        }, transitionMode.update(datum.arc)), extraTransition ? extraTransition.update(datum) : {});\n      },\n      leave: function leave(datum) {\n        return _objectSpread2(_objectSpread2({\n          progress: 0\n        }, transitionMode.leave(datum.arc)), extraTransition ? extraTransition.leave(datum) : {});\n      }\n    };\n  }, [mode, extraTransition]);\n};\n\nvar computeArcCenter = function computeArcCenter(arc, offset) {\n  var angle = midAngle(arc) - Math.PI / 2;\n  var radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset;\n  return positionFromAngle(angle, radius);\n};\n\nvar interpolateArcCenter = function interpolateArcCenter(offset) {\n  return function (startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue) {\n    return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue], function (startAngle, endAngle, innerRadius, outerRadius) {\n      var centroid = computeArcCenter({\n        startAngle: startAngle,\n        endAngle: endAngle,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius\n      }, offset);\n      return \"translate(\".concat(centroid.x, \",\").concat(centroid.y, \")\");\n    });\n  };\n};\n\nvar useArcCentersTransition = function useArcCentersTransition(data) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'innerRadius';\n  var extra = arguments.length > 3 ? arguments[3] : undefined;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var phases = useArcTransitionMode(mode, extra);\n  var transition = useTransition(data, {\n    keys: function keys(datum) {\n      return datum.id;\n    },\n    initial: phases.update,\n    from: phases.enter,\n    enter: phases.update,\n    update: phases.update,\n    leave: phases.leave,\n    config: springConfig,\n    immediate: !animate\n  });\n  return {\n    transition: transition,\n    interpolate: interpolateArcCenter(offset)\n  };\n};\n\nvar useArcCenters = function useArcCenters(_ref) {\n  var data = _ref.data,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0.5 : _ref$offset,\n      _ref$skipAngle = _ref.skipAngle,\n      skipAngle = _ref$skipAngle === void 0 ? 0 : _ref$skipAngle,\n      _ref$computeExtraProp = _ref.computeExtraProps,\n      computeExtraProps = _ref$computeExtraProp === void 0 ? function () {\n    return {};\n  } : _ref$computeExtraProp;\n  return useMemo(function () {\n    return filterDataBySkipAngle(data, skipAngle).map(function (datum) {\n      var position = computeArcCenter(datum.arc, offset);\n      return _objectSpread2(_objectSpread2({}, computeExtraProps(datum)), {}, {\n        x: position.x,\n        y: position.y,\n        data: datum\n      });\n    });\n  }, [data, offset, skipAngle, computeExtraProps]);\n};\n\nvar staticStyle = {\n  pointerEvents: 'none'\n};\n\nvar ArcLabel = function ArcLabel(_ref) {\n  var label = _ref.label,\n      style = _ref.style;\n  var theme = useTheme();\n  return React.createElement(animated.g, {\n    transform: style.transform,\n    opacity: style.progress,\n    style: staticStyle\n  }, React.createElement(animated.text, {\n    textAnchor: \"middle\",\n    dominantBaseline: \"central\",\n    style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n      fill: style.textColor\n    })\n  }, label));\n};\n\nvar ArcLabelsLayer = function ArcLabelsLayer(_ref) {\n  var center = _ref.center,\n      data = _ref.data,\n      transitionMode = _ref.transitionMode,\n      labelAccessor = _ref.label,\n      radiusOffset = _ref.radiusOffset,\n      skipAngle = _ref.skipAngle,\n      textColor = _ref.textColor,\n      _ref$component = _ref.component,\n      component = _ref$component === void 0 ? ArcLabel : _ref$component;\n  var getLabel = usePropertyAccessor(labelAccessor);\n  var theme = useTheme();\n  var getTextColor = useInheritedColor(textColor, theme);\n  var filteredData = useMemo(function () {\n    return data.filter(function (datum) {\n      return Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle;\n    });\n  }, [data, skipAngle]);\n\n  var _useArcCentersTransit = useArcCentersTransition(filteredData, radiusOffset, transitionMode),\n      transition = _useArcCentersTransit.transition,\n      interpolate = _useArcCentersTransit.interpolate;\n\n  var Label = component;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(center[0], \",\").concat(center[1], \")\")\n  }, transition(function (transitionProps, datum) {\n    return React.createElement(Label, {\n      key: datum.id,\n      datum: datum,\n      label: getLabel(datum),\n      style: _objectSpread2(_objectSpread2({}, transitionProps), {}, {\n        transform: interpolate(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius),\n        textColor: getTextColor(datum)\n      })\n    });\n  }));\n};\n\nvar drawCanvasArcLabels = function drawCanvasArcLabels(ctx, labels, theme) {\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.font = \"\".concat(theme.labels.text.fontSize, \"px \").concat(theme.labels.text.fontFamily);\n  labels.forEach(function (label) {\n    ctx.fillStyle = label.textColor;\n    ctx.fillText(\"\".concat(label.label), label.x, label.y);\n  });\n};\n\nvar useArcLabels = function useArcLabels(_ref) {\n  var data = _ref.data,\n      offset = _ref.offset,\n      skipAngle = _ref.skipAngle,\n      label = _ref.label,\n      textColor = _ref.textColor;\n  var getLabel = usePropertyAccessor(label);\n  var theme = useTheme();\n  var getTextColor = useInheritedColor(textColor, theme);\n  var computeExtraProps = useCallback(function (datum) {\n    return {\n      label: getLabel(datum),\n      textColor: getTextColor(datum)\n    };\n  }, [getLabel, getTextColor]);\n  return useArcCenters({\n    data: data,\n    offset: offset,\n    skipAngle: skipAngle,\n    computeExtraProps: computeExtraProps\n  });\n};\n\nvar computeArcLinkTextAnchor = function computeArcLinkTextAnchor(arc) {\n  var centerAngle = getNormalizedAngle(arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2);\n\n  if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n    return 'start';\n  }\n\n  return 'end';\n};\n\nvar computeArcLink = function computeArcLink(arc, offset, diagonalLength, straightLength) {\n  var centerAngle = getNormalizedAngle(arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2);\n  var point0 = positionFromAngle(centerAngle, arc.outerRadius + offset);\n  var point1 = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength);\n  var side;\n  var point2;\n\n  if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n    side = 'after';\n    point2 = {\n      x: point1.x + straightLength,\n      y: point1.y\n    };\n  } else {\n    side = 'before';\n    point2 = {\n      x: point1.x - straightLength,\n      y: point1.y\n    };\n  }\n\n  return {\n    side: side,\n    points: [point0, point1, point2]\n  };\n};\n\nvar lineGenerator = line().x(function (d) {\n  return d.x;\n}).y(function (d) {\n  return d.y;\n});\n\nvar useTransitionPhases = function useTransitionPhases(_ref) {\n  var offset = _ref.offset,\n      diagonalLength = _ref.diagonalLength,\n      straightLength = _ref.straightLength,\n      textOffset = _ref.textOffset,\n      getLinkColor = _ref.getLinkColor,\n      getTextColor = _ref.getTextColor;\n  return useMemo(function () {\n    return {\n      enter: function enter(datum) {\n        return {\n          startAngle: datum.arc.startAngle,\n          endAngle: datum.arc.endAngle,\n          innerRadius: datum.arc.innerRadius,\n          outerRadius: datum.arc.outerRadius,\n          offset: offset,\n          diagonalLength: 0,\n          straightLength: 0,\n          textOffset: textOffset,\n          linkColor: getLinkColor(datum),\n          textColor: getTextColor(datum),\n          opacity: 0\n        };\n      },\n      update: function update(d) {\n        return {\n          startAngle: d.arc.startAngle,\n          endAngle: d.arc.endAngle,\n          innerRadius: d.arc.innerRadius,\n          outerRadius: d.arc.outerRadius,\n          offset: offset,\n          diagonalLength: diagonalLength,\n          straightLength: straightLength,\n          textOffset: textOffset,\n          linkColor: getLinkColor(d),\n          textColor: getTextColor(d),\n          opacity: 1\n        };\n      },\n      leave: function leave(d) {\n        return {\n          startAngle: d.arc.startAngle,\n          endAngle: d.arc.endAngle,\n          innerRadius: d.arc.innerRadius,\n          outerRadius: d.arc.outerRadius,\n          offset: offset,\n          diagonalLength: 0,\n          straightLength: 0,\n          textOffset: textOffset,\n          linkColor: getLinkColor(d),\n          textColor: getTextColor(d),\n          opacity: 0\n        };\n      }\n    };\n  }, [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]);\n};\n\nvar interpolateLink = function interpolateLink(startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, offsetValue, diagonalLengthValue, straightLengthValue) {\n  return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, offsetValue, diagonalLengthValue, straightLengthValue], function (startAngle, endAngle, innerRadius, outerRadius, offset, diagonalLengthAnimated, straightLengthAnimated) {\n    var _computeArcLink = computeArcLink({\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius\n    }, offset, diagonalLengthAnimated, straightLengthAnimated),\n        points = _computeArcLink.points;\n\n    return lineGenerator(points);\n  });\n};\n\nvar interpolateTextAnchor = function interpolateTextAnchor(startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue) {\n  return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue], function (startAngle, endAngle, innerRadius, outerRadius) {\n    return computeArcLinkTextAnchor({\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius\n    });\n  });\n};\n\nvar interpolateTextPosition = function interpolateTextPosition(startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, offsetValue, diagonalLengthValue, straightLengthValue, textOffsetValue) {\n  return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, offsetValue, diagonalLengthValue, straightLengthValue, textOffsetValue], function (startAngle, endAngle, innerRadius, outerRadius, offset, diagonalLengthAnimated, straightLengthAnimated, textOffset) {\n    var _computeArcLink2 = computeArcLink({\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius\n    }, offset, diagonalLengthAnimated, straightLengthAnimated),\n        points = _computeArcLink2.points,\n        side = _computeArcLink2.side;\n\n    var position = points[2];\n\n    if (side === 'before') {\n      position.x -= textOffset;\n    } else {\n      position.x += textOffset;\n    }\n\n    return \"translate(\".concat(position.x, \",\").concat(position.y, \")\");\n  });\n};\n\nvar useArcLinkLabelsTransition = function useArcLinkLabelsTransition(_ref2) {\n  var data = _ref2.data,\n      _ref2$offset = _ref2.offset,\n      offset = _ref2$offset === void 0 ? 0 : _ref2$offset,\n      diagonalLength = _ref2.diagonalLength,\n      straightLength = _ref2.straightLength,\n      _ref2$skipAngle = _ref2.skipAngle,\n      skipAngle = _ref2$skipAngle === void 0 ? 0 : _ref2$skipAngle,\n      textOffset = _ref2.textOffset,\n      linkColor = _ref2.linkColor,\n      textColor = _ref2.textColor;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var theme = useTheme();\n  var getLinkColor = useInheritedColor(linkColor, theme);\n  var getTextColor = useInheritedColor(textColor, theme);\n  var filteredData = useFilteredDataBySkipAngle(data, skipAngle);\n  var transitionPhases = useTransitionPhases({\n    offset: offset,\n    diagonalLength: diagonalLength,\n    straightLength: straightLength,\n    textOffset: textOffset,\n    getLinkColor: getLinkColor,\n    getTextColor: getTextColor\n  });\n  var transition = useTransition(filteredData, {\n    keys: function keys(datum) {\n      return datum.id;\n    },\n    initial: transitionPhases.update,\n    from: transitionPhases.enter,\n    enter: transitionPhases.update,\n    update: transitionPhases.update,\n    leave: transitionPhases.leave,\n    config: springConfig,\n    immediate: !animate\n  });\n  return {\n    transition: transition,\n    interpolateLink: interpolateLink,\n    interpolateTextAnchor: interpolateTextAnchor,\n    interpolateTextPosition: interpolateTextPosition\n  };\n};\n\nvar ArcLinkLabel = function ArcLinkLabel(_ref) {\n  var label = _ref.label,\n      style = _ref.style;\n  var theme = useTheme();\n  return React.createElement(animated.g, {\n    opacity: style.opacity\n  }, React.createElement(animated.path, {\n    fill: \"none\",\n    stroke: style.linkColor,\n    strokeWidth: style.thickness,\n    d: style.path\n  }), React.createElement(animated.text, {\n    transform: style.textPosition,\n    textAnchor: style.textAnchor,\n    dominantBaseline: \"central\",\n    style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n      fill: style.textColor\n    })\n  }, label));\n};\n\nvar ArcLinkLabelsLayer = function ArcLinkLabelsLayer(_ref) {\n  var center = _ref.center,\n      data = _ref.data,\n      labelAccessor = _ref.label,\n      skipAngle = _ref.skipAngle,\n      offset = _ref.offset,\n      diagonalLength = _ref.diagonalLength,\n      straightLength = _ref.straightLength,\n      strokeWidth = _ref.strokeWidth,\n      textOffset = _ref.textOffset,\n      textColor = _ref.textColor,\n      linkColor = _ref.linkColor,\n      _ref$component = _ref.component,\n      component = _ref$component === void 0 ? ArcLinkLabel : _ref$component;\n  var getLabel = usePropertyAccessor(labelAccessor);\n\n  var _useArcLinkLabelsTran = useArcLinkLabelsTransition({\n    data: data,\n    skipAngle: skipAngle,\n    offset: offset,\n    diagonalLength: diagonalLength,\n    straightLength: straightLength,\n    textOffset: textOffset,\n    linkColor: linkColor,\n    textColor: textColor\n  }),\n      transition = _useArcLinkLabelsTran.transition,\n      interpolateLink = _useArcLinkLabelsTran.interpolateLink,\n      interpolateTextAnchor = _useArcLinkLabelsTran.interpolateTextAnchor,\n      interpolateTextPosition = _useArcLinkLabelsTran.interpolateTextPosition;\n\n  var Label = component;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(center[0], \",\").concat(center[1], \")\")\n  }, transition(function (transitionProps, datum) {\n    return React.createElement(Label, {\n      key: datum.id,\n      datum: datum,\n      label: getLabel(datum),\n      style: _objectSpread2(_objectSpread2({}, transitionProps), {}, {\n        thickness: strokeWidth,\n        path: interpolateLink(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius, transitionProps.offset, transitionProps.diagonalLength, transitionProps.straightLength),\n        textAnchor: interpolateTextAnchor(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius),\n        textPosition: interpolateTextPosition(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius, transitionProps.offset, transitionProps.diagonalLength, transitionProps.straightLength, transitionProps.textOffset)\n      })\n    });\n  }));\n};\n\nvar drawCanvasArcLinkLabels = function drawCanvasArcLinkLabels(ctx, labels, theme, strokeWidth) {\n  ctx.textBaseline = 'middle';\n  ctx.font = \"\".concat(theme.labels.text.fontSize, \"px \").concat(theme.labels.text.fontFamily);\n  labels.forEach(function (label) {\n    ctx.fillStyle = label.textColor;\n    ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor];\n    ctx.fillText(\"\".concat(label.label), label.x, label.y);\n    ctx.beginPath();\n    ctx.strokeStyle = label.linkColor;\n    ctx.lineWidth = strokeWidth;\n    label.points.forEach(function (point, index) {\n      if (index === 0) ctx.moveTo(point.x, point.y);else ctx.lineTo(point.x, point.y);\n    });\n    ctx.stroke();\n  });\n};\n\nvar useArcLinks = function useArcLinks(_ref) {\n  var data = _ref.data,\n      _ref$skipAngle = _ref.skipAngle,\n      skipAngle = _ref$skipAngle === void 0 ? 0 : _ref$skipAngle,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0.5 : _ref$offset,\n      diagonalLength = _ref.diagonalLength,\n      straightLength = _ref.straightLength,\n      _ref$computeExtraProp = _ref.computeExtraProps,\n      computeExtraProps = _ref$computeExtraProp === void 0 ? function () {\n    return {};\n  } : _ref$computeExtraProp;\n  var links = useMemo(function () {\n    return data.filter(function (datum) {\n      return Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle;\n    }).map(function (datum) {\n      return _objectSpread2(_objectSpread2({}, computeArcLink(datum.arc, offset, diagonalLength, straightLength)), {}, {\n        data: datum\n      });\n    });\n  }, [data, skipAngle, offset, diagonalLength, straightLength]);\n  return useMemo(function () {\n    return links.map(function (link) {\n      return _objectSpread2(_objectSpread2({}, computeExtraProps(link)), link);\n    });\n  }, [links, computeExtraProps]);\n};\n\nvar useArcLinkLabels = function useArcLinkLabels(_ref) {\n  var data = _ref.data,\n      skipAngle = _ref.skipAngle,\n      offset = _ref.offset,\n      diagonalLength = _ref.diagonalLength,\n      straightLength = _ref.straightLength,\n      _ref$textOffset = _ref.textOffset,\n      textOffset = _ref$textOffset === void 0 ? 0 : _ref$textOffset,\n      label = _ref.label,\n      linkColor = _ref.linkColor,\n      textColor = _ref.textColor;\n  var getLabel = usePropertyAccessor(label);\n  var theme = useTheme();\n  var getLinkColor = useInheritedColor(linkColor, theme);\n  var getTextColor = useInheritedColor(textColor, theme);\n  var computeExtraProps = useCallback(function (link) {\n    var position = {\n      x: link.points[2].x,\n      y: link.points[2].y\n    };\n    var textAnchor;\n\n    if (link.side === 'before') {\n      position.x -= textOffset;\n      textAnchor = 'end';\n    } else {\n      position.x += textOffset;\n      textAnchor = 'start';\n    }\n\n    return _objectSpread2(_objectSpread2({}, position), {}, {\n      label: getLabel(link.data),\n      linkColor: getLinkColor(link.data),\n      textAnchor: textAnchor,\n      textColor: getTextColor(link.data)\n    });\n  }, [getLabel, getLinkColor, getTextColor, textOffset]);\n  return useArcLinks({\n    data: data,\n    skipAngle: skipAngle,\n    offset: offset,\n    diagonalLength: diagonalLength,\n    straightLength: straightLength,\n    computeExtraProps: computeExtraProps\n  });\n};\n\nvar ArcShape = function ArcShape(_ref) {\n  var datum = _ref.datum,\n      style = _ref.style,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave;\n  var handleClick = useCallback(function (event) {\n    return onClick === null || onClick === void 0 ? void 0 : onClick(datum, event);\n  }, [onClick, datum]);\n  var handleMouseEnter = useCallback(function (event) {\n    return onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(datum, event);\n  }, [onMouseEnter, datum]);\n  var handleMouseMove = useCallback(function (event) {\n    return onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(datum, event);\n  }, [onMouseMove, datum]);\n  var handleMouseLeave = useCallback(function (event) {\n    return onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(datum, event);\n  }, [onMouseLeave, datum]);\n  return React.createElement(animated.path, {\n    d: style.path,\n    opacity: style.opacity,\n    fill: datum.fill || style.color,\n    stroke: style.borderColor,\n    strokeWidth: style.borderWidth,\n    onClick: onClick ? handleClick : undefined,\n    onMouseEnter: onMouseEnter ? handleMouseEnter : undefined,\n    onMouseMove: onMouseMove ? handleMouseMove : undefined,\n    onMouseLeave: onMouseLeave ? handleMouseLeave : undefined\n  });\n};\n\nvar interpolateArc = function interpolateArc(startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, arcGenerator) {\n  return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue], function (startAngle, endAngle, innerRadius, outerRadius) {\n    return arcGenerator({\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: Math.max(0, innerRadius),\n      outerRadius: Math.max(0, outerRadius)\n    });\n  });\n};\n\nvar useArcsTransition = function useArcsTransition(data) {\n  var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'innerRadius';\n  var extra = arguments.length > 2 ? arguments[2] : undefined;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var phases = useArcTransitionMode(mode, extra);\n  var transition = useTransition(data, {\n    keys: function keys(datum) {\n      return datum.id;\n    },\n    initial: phases.update,\n    from: phases.enter,\n    enter: phases.update,\n    update: phases.update,\n    leave: phases.leave,\n    config: springConfig,\n    immediate: !animate\n  });\n  return {\n    transition: transition,\n    interpolate: interpolateArc\n  };\n};\n\nvar ArcsLayer = function ArcsLayer(_ref) {\n  var center = _ref.center,\n      data = _ref.data,\n      arcGenerator = _ref.arcGenerator,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      transitionMode = _ref.transitionMode,\n      _ref$component = _ref.component,\n      component = _ref$component === void 0 ? ArcShape : _ref$component;\n  var theme = useTheme();\n  var getBorderColor = useInheritedColor(borderColor, theme);\n\n  var _useArcsTransition = useArcsTransition(data, transitionMode, {\n    enter: function enter(datum) {\n      return {\n        opacity: 0,\n        color: datum.color,\n        borderColor: getBorderColor(datum)\n      };\n    },\n    update: function update(datum) {\n      return {\n        opacity: 1,\n        color: datum.color,\n        borderColor: getBorderColor(datum)\n      };\n    },\n    leave: function leave(datum) {\n      return {\n        opacity: 0,\n        color: datum.color,\n        borderColor: getBorderColor(datum)\n      };\n    }\n  }),\n      transition = _useArcsTransition.transition,\n      interpolate = _useArcsTransition.interpolate;\n\n  var Arc = component;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(center[0], \",\").concat(center[1], \")\")\n  }, transition(function (transitionProps, datum) {\n    return createElement(Arc, {\n      key: datum.id,\n      datum: datum,\n      style: _objectSpread2(_objectSpread2({}, transitionProps), {}, {\n        borderWidth: borderWidth,\n        path: interpolate(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius, arcGenerator)\n      }),\n      onClick: onClick,\n      onMouseEnter: onMouseEnter,\n      onMouseMove: onMouseMove,\n      onMouseLeave: onMouseLeave\n    });\n  }));\n};\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar computeArcBoundingBox = function computeArcBoundingBox(centerX, centerY, radius, startAngle, endAngle) {\n  var includeCenter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  var points = [];\n  var p0 = positionFromAngle(degreesToRadians(startAngle), radius);\n  points.push([p0.x, p0.y]);\n  var p1 = positionFromAngle(degreesToRadians(endAngle), radius);\n  points.push([p1.x, p1.y]);\n\n  for (var angle = Math.round(Math.min(startAngle, endAngle)); angle <= Math.round(Math.max(startAngle, endAngle)); angle++) {\n    if (angle % 90 === 0) {\n      var p = positionFromAngle(degreesToRadians(angle), radius);\n      points.push([p.x, p.y]);\n    }\n  }\n\n  points = points.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        x = _ref2[0],\n        y = _ref2[1];\n\n    return [centerX + x, centerY + y];\n  });\n\n  if (includeCenter === true) {\n    points.push([centerX, centerY]);\n  }\n\n  var xs = points.map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 1),\n        x = _ref4[0];\n\n    return x;\n  });\n  var ys = points.map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        y = _ref6[1];\n\n    return y;\n  });\n  var x0 = Math.min.apply(Math, _toConsumableArray(xs));\n  var x1 = Math.max.apply(Math, _toConsumableArray(xs));\n  var y0 = Math.min.apply(Math, _toConsumableArray(ys));\n  var y1 = Math.max.apply(Math, _toConsumableArray(ys));\n  return {\n    points: points,\n    x: x0,\n    y: y0,\n    width: x1 - x0,\n    height: y1 - y0\n  };\n};\n\nvar isCursorInRing = function isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY) {\n  var distance = getDistance(cursorX, cursorY, centerX, centerY);\n  return distance < radius && distance > innerRadius;\n};\n\nvar findArcUnderCursor = function findArcUnderCursor(centerX, centerY, radius, innerRadius, arcs, cursorX, cursorY) {\n  if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n    return undefined;\n  }\n\n  var cursorAngle = getAngle(cursorX, cursorY, centerX, centerY);\n  return arcs.find(function (_ref) {\n    var startAngle = _ref.startAngle,\n        endAngle = _ref.endAngle;\n    return cursorAngle >= startAngle && cursorAngle < endAngle;\n  });\n};\n\nvar useAnimatedArc = function useAnimatedArc(datumWithArc, arcGenerator) {\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedValues = useSpring({\n    startAngle: datumWithArc.arc.startAngle,\n    endAngle: datumWithArc.arc.endAngle,\n    innerRadius: datumWithArc.arc.innerRadius,\n    outerRadius: datumWithArc.arc.outerRadius,\n    config: springConfig,\n    immediate: !animate\n  });\n  return _objectSpread2(_objectSpread2({}, animatedValues), {}, {\n    path: interpolateArc(animatedValues.startAngle, animatedValues.endAngle, animatedValues.innerRadius, animatedValues.outerRadius, arcGenerator)\n  });\n};\n\nvar useArcGenerator = function useArcGenerator() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$cornerRadius = _ref.cornerRadius,\n      cornerRadius = _ref$cornerRadius === void 0 ? 0 : _ref$cornerRadius,\n      _ref$padAngle = _ref.padAngle,\n      padAngle = _ref$padAngle === void 0 ? 0 : _ref$padAngle;\n\n  return useMemo(function () {\n    return arc().innerRadius(function (arc) {\n      return arc.innerRadius;\n    }).outerRadius(function (arc) {\n      return arc.outerRadius;\n    }).cornerRadius(cornerRadius).padAngle(padAngle);\n  }, [cornerRadius, padAngle]);\n};\n\nexport { ArcLabelsLayer, ArcLinkLabelsLayer, ArcShape, ArcsLayer, arcTransitionModeById, arcTransitionModes, computeArcBoundingBox, computeArcCenter, computeArcLink, computeArcLinkTextAnchor, drawCanvasArcLabels, drawCanvasArcLinkLabels, findArcUnderCursor, interpolateArc, interpolateArcCenter, isCursorInRing, useAnimatedArc, useArcCenters, useArcCentersTransition, useArcGenerator, useArcLabels, useArcLinkLabels, useArcLinkLabelsTransition, useArcLinks, useArcTransitionMode, useArcsTransition };","map":{"version":3,"mappings":"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","names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","getNormalizedAngle","angle","normalizedAngle","Math","PI","filterDataBySkipAngle","data","skipAngle","abs","radiansToDegrees","datum","arc","endAngle","startAngle","useFilteredDataBySkipAngle","useMemo","arcTransitionModes","arcTransitionModeById","enter","update","leave","middleAngle","innerRadius","outerRadius","centerRadius","pushIn","pushOut","useArcTransitionMode","mode","extraTransition","transitionMode","progress","computeArcCenter","offset","midAngle","radius","positionFromAngle","interpolateArcCenter","startAngleValue","endAngleValue","innerRadiusValue","outerRadiusValue","to","centroid","x","y","useArcCentersTransition","extra","useMotionConfig","animate","springConfig","config","phases","transition","useTransition","id","initial","from","immediate","interpolate","useArcCenters","computeExtraProps","map","position","staticStyle","pointerEvents","ArcLabel","label","style","theme","useTheme","React","animated","g","transform","opacity","text","textAnchor","dominantBaseline","labels","fill","textColor","ArcLabelsLayer","center","labelAccessor","radiusOffset","component","getLabel","usePropertyAccessor","getTextColor","useInheritedColor","filteredData","Label","transitionProps","createElement","drawCanvasArcLabels","ctx","textAlign","textBaseline","font","fontSize","fontFamily","fillStyle","fillText","useArcLabels","useCallback","computeArcLinkTextAnchor","centerAngle","computeArcLink","diagonalLength","straightLength","point0","point1","side","point2","points","lineGenerator","line","d","useTransitionPhases","textOffset","getLinkColor","linkColor","interpolateLink","offsetValue","diagonalLengthValue","straightLengthValue","diagonalLengthAnimated","straightLengthAnimated","interpolateTextAnchor","interpolateTextPosition","textOffsetValue","useArcLinkLabelsTransition","transitionPhases","ArcLinkLabel","path","stroke","strokeWidth","thickness","textPosition","ArcLinkLabelsLayer","drawCanvasArcLinkLabels","textPropsByEngine","canvas","align","beginPath","strokeStyle","lineWidth","point","index","moveTo","lineTo","useArcLinks","links","link","useArcLinkLabels","ArcShape","onClick","onMouseEnter","onMouseMove","onMouseLeave","handleClick","event","handleMouseEnter","handleMouseMove","handleMouseLeave","color","borderColor","borderWidth","undefined","interpolateArc","arcGenerator","max","useArcsTransition","ArcsLayer","getBorderColor","Arc","_arrayLikeToArray","arr","len","arr2","Array","_arrayWithoutHoles","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","_nonIterableSpread","TypeError","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_arrayWithHoles","_iterableToArrayLimit","_arr","_n","_d","_e","_i","_s","next","done","err","_nonIterableRest","_slicedToArray","arrayWithHoles","iterableToArrayLimit","nonIterableRest","computeArcBoundingBox","centerX","centerY","includeCenter","p0","degreesToRadians","p1","round","min","p","xs","ys","x0","x1","y0","y1","width","height","isCursorInRing","cursorX","cursorY","distance","getDistance","findArcUnderCursor","arcs","cursorAngle","getAngle","find","useAnimatedArc","datumWithArc","animatedValues","useSpring","useArcGenerator","cornerRadius","padAngle","d3Arc"],"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/utils.ts","../src/arcTransitionMode.ts","../src/centers.ts","../src/arc_labels/ArcLabel.tsx","../src/arc_labels/ArcLabelsLayer.tsx","../src/arc_labels/canvas.ts","../src/arc_labels/useArcLabels.ts","../src/arc_link_labels/compute.ts","../src/arc_link_labels/useArcLinkLabelsTransition.ts","../src/arc_link_labels/ArcLinkLabel.tsx","../src/arc_link_labels/ArcLinkLabelsLayer.tsx","../src/arc_link_labels/canvas.ts","../src/arc_link_labels/useArcLinks.ts","../src/arc_link_labels/useArcLinkLabels.ts","../src/ArcShape.tsx","../src/interpolateArc.ts","../src/useArcsTransition.ts","../src/ArcsLayer.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/boundingBox.ts","../src/interactivity.ts","../src/useAnimatedArc.ts","../src/useArcGenerator.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from 'react-spring'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter = (offset: number) => (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            const centroid = computeArcCenter(\n                { startAngle, endAngle, innerRadius, outerRadius },\n                offset\n            )\n\n            return `translate(${centroid.x},${centroid.y})`\n        }\n    )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import React, { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: CompleteTheme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, label.x, label.y)\n    })\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from 'react-spring'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    } = useArcLinkLabelsTransition<Datum>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        linkColor,\n        textColor,\n    })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import {\n    // @ts-ignore\n    textPropsByEngine,\n    CompleteTheme,\n} from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: CompleteTheme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        ctx.fillText(`${label.label}`, label.x, label.y)\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n","import React, { useCallback } from 'react'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(event => onMouseEnter?.(datum, event), [\n        onMouseEnter,\n        datum,\n    ])\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(event => onMouseLeave?.(datum, event), [\n        onMouseLeave,\n        datum,\n    ])\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { to, SpringValue } from 'react-spring'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import React, { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter === true) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n","import { useSpring } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { Arc, ArcGenerator } from './types'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a single arc,\n * if you want to animate a group of arcs,\n * please have a look at the `useArcsTransition` hook.\n */\nexport const useAnimatedArc = (datumWithArc: { arc: Arc }, arcGenerator: ArcGenerator) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedValues = useSpring({\n        startAngle: datumWithArc.arc.startAngle,\n        endAngle: datumWithArc.arc.endAngle,\n        innerRadius: datumWithArc.arc.innerRadius,\n        outerRadius: datumWithArc.arc.outerRadius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        ...animatedValues,\n        path: interpolateArc(\n            animatedValues.startAngle,\n            animatedValues.endAngle,\n            animatedValues.innerRadius,\n            animatedValues.outerRadius,\n            arcGenerator\n        ),\n    }\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n"]},"metadata":{},"sourceType":"module"}