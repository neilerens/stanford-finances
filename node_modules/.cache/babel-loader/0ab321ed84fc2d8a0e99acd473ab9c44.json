{"ast":null,"code":"import React, { useMemo, useCallback, createElement } from 'react';\nimport { radiansToDegrees, midAngle, positionFromAngle, useMotionConfig, useTheme, usePropertyAccessor, textPropsByEngine, degreesToRadians, getDistance, getAngle } from '@nivo/core';\nimport { useInheritedColor } from '@nivo/colors';\nimport { to, useTransition, animated, useSpring } from 'react-spring';\nimport { line, arc } from 'd3-shape';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getNormalizedAngle = function getNormalizedAngle(angle) {\n  var normalizedAngle = angle % (Math.PI * 2);\n\n  if (normalizedAngle < 0) {\n    normalizedAngle += Math.PI * 2;\n  }\n\n  return normalizedAngle;\n};\n\nvar filterDataBySkipAngle = function filterDataBySkipAngle(data, skipAngle) {\n  return data.filter(function (datum) {\n    return Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle;\n  });\n};\n\nvar useFilteredDataBySkipAngle = function useFilteredDataBySkipAngle(data, skipAngle) {\n  return useMemo(function () {\n    return filterDataBySkipAngle(data, skipAngle);\n  }, [data, skipAngle]);\n};\n\nvar arcTransitionModes = ['startAngle', 'middleAngle', 'endAngle', 'innerRadius', 'centerRadius', 'outerRadius', 'pushIn', 'pushOut'];\nvar arcTransitionModeById = {\n  startAngle: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        endAngle: arc.startAngle\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        startAngle: arc.endAngle\n      });\n    }\n  },\n  middleAngle: {\n    enter: function enter(arc) {\n      var middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2;\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        startAngle: middleAngle,\n        endAngle: middleAngle\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      var middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2;\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        startAngle: middleAngle,\n        endAngle: middleAngle\n      });\n    }\n  },\n  endAngle: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        startAngle: arc.endAngle\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        endAngle: arc.startAngle\n      });\n    }\n  },\n  innerRadius: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        outerRadius: arc.innerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.outerRadius\n      });\n    }\n  },\n  centerRadius: {\n    enter: function enter(arc) {\n      var centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2;\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: centerRadius,\n        outerRadius: centerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      var centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2;\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: centerRadius,\n        outerRadius: centerRadius\n      });\n    }\n  },\n  outerRadius: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.outerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        outerRadius: arc.innerRadius\n      });\n    }\n  },\n  pushIn: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n        outerRadius: arc.innerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.outerRadius,\n        outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius\n      });\n    }\n  },\n  pushOut: {\n    enter: function enter(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.outerRadius,\n        outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius\n      });\n    },\n    update: function update(arc) {\n      return arc;\n    },\n    leave: function leave(arc) {\n      return _objectSpread2(_objectSpread2({}, arc), {}, {\n        innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n        outerRadius: arc.innerRadius\n      });\n    }\n  }\n};\n\nvar useArcTransitionMode = function useArcTransitionMode(mode, extraTransition) {\n  return useMemo(function () {\n    var transitionMode = arcTransitionModeById[mode];\n    return {\n      enter: function enter(datum) {\n        return _objectSpread2(_objectSpread2({\n          progress: 0\n        }, transitionMode.enter(datum.arc)), extraTransition ? extraTransition.enter(datum) : {});\n      },\n      update: function update(datum) {\n        return _objectSpread2(_objectSpread2({\n          progress: 1\n        }, transitionMode.update(datum.arc)), extraTransition ? extraTransition.update(datum) : {});\n      },\n      leave: function leave(datum) {\n        return _objectSpread2(_objectSpread2({\n          progress: 0\n        }, transitionMode.leave(datum.arc)), extraTransition ? extraTransition.leave(datum) : {});\n      }\n    };\n  }, [mode, extraTransition]);\n};\n\nvar computeArcCenter = function computeArcCenter(arc, offset) {\n  var angle = midAngle(arc) - Math.PI / 2;\n  var radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset;\n  return positionFromAngle(angle, radius);\n};\n\nvar interpolateArcCenter = function interpolateArcCenter(offset) {\n  return function (startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue) {\n    return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue], function (startAngle, endAngle, innerRadius, outerRadius) {\n      var centroid = computeArcCenter({\n        startAngle: startAngle,\n        endAngle: endAngle,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius\n      }, offset);\n      return \"translate(\".concat(centroid.x, \",\").concat(centroid.y, \")\");\n    });\n  };\n};\n\nvar useArcCentersTransition = function useArcCentersTransition(data) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'innerRadius';\n  var extra = arguments.length > 3 ? arguments[3] : undefined;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var phases = useArcTransitionMode(mode, extra);\n  var transition = useTransition(data, {\n    keys: function keys(datum) {\n      return datum.id;\n    },\n    initial: phases.update,\n    from: phases.enter,\n    enter: phases.update,\n    update: phases.update,\n    leave: phases.leave,\n    config: springConfig,\n    immediate: !animate\n  });\n  return {\n    transition: transition,\n    interpolate: interpolateArcCenter(offset)\n  };\n};\n\nvar useArcCenters = function useArcCenters(_ref) {\n  var data = _ref.data,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0.5 : _ref$offset,\n      _ref$skipAngle = _ref.skipAngle,\n      skipAngle = _ref$skipAngle === void 0 ? 0 : _ref$skipAngle,\n      _ref$computeExtraProp = _ref.computeExtraProps,\n      computeExtraProps = _ref$computeExtraProp === void 0 ? function () {\n    return {};\n  } : _ref$computeExtraProp;\n  return useMemo(function () {\n    return filterDataBySkipAngle(data, skipAngle).map(function (datum) {\n      var position = computeArcCenter(datum.arc, offset);\n      return _objectSpread2(_objectSpread2({}, computeExtraProps(datum)), {}, {\n        x: position.x,\n        y: position.y,\n        data: datum\n      });\n    });\n  }, [data, offset, skipAngle, computeExtraProps]);\n};\n\nvar staticStyle = {\n  pointerEvents: 'none'\n};\n\nvar ArcLabel = function ArcLabel(_ref) {\n  var label = _ref.label,\n      style = _ref.style;\n  var theme = useTheme();\n  return React.createElement(animated.g, {\n    transform: style.transform,\n    opacity: style.progress,\n    style: staticStyle\n  }, React.createElement(animated.text, {\n    textAnchor: \"middle\",\n    dominantBaseline: \"central\",\n    style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n      fill: style.textColor\n    })\n  }, label));\n};\n\nvar ArcLabelsLayer = function ArcLabelsLayer(_ref) {\n  var center = _ref.center,\n      data = _ref.data,\n      transitionMode = _ref.transitionMode,\n      labelAccessor = _ref.label,\n      radiusOffset = _ref.radiusOffset,\n      skipAngle = _ref.skipAngle,\n      textColor = _ref.textColor,\n      _ref$component = _ref.component,\n      component = _ref$component === void 0 ? ArcLabel : _ref$component;\n  var getLabel = usePropertyAccessor(labelAccessor);\n  var theme = useTheme();\n  var getTextColor = useInheritedColor(textColor, theme);\n  var filteredData = useMemo(function () {\n    return data.filter(function (datum) {\n      return Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle;\n    });\n  }, [data, skipAngle]);\n\n  var _useArcCentersTransit = useArcCentersTransition(filteredData, radiusOffset, transitionMode),\n      transition = _useArcCentersTransit.transition,\n      interpolate = _useArcCentersTransit.interpolate;\n\n  var Label = component;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(center[0], \",\").concat(center[1], \")\")\n  }, transition(function (transitionProps, datum) {\n    return React.createElement(Label, {\n      key: datum.id,\n      datum: datum,\n      label: getLabel(datum),\n      style: _objectSpread2(_objectSpread2({}, transitionProps), {}, {\n        transform: interpolate(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius),\n        textColor: getTextColor(datum)\n      })\n    });\n  }));\n};\n\nvar drawCanvasArcLabels = function drawCanvasArcLabels(ctx, labels, theme) {\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.font = \"\".concat(theme.labels.text.fontSize, \"px \").concat(theme.labels.text.fontFamily);\n  labels.forEach(function (label) {\n    ctx.fillStyle = label.textColor;\n    ctx.fillText(\"\".concat(label.label), label.x, label.y);\n  });\n};\n\nvar useArcLabels = function useArcLabels(_ref) {\n  var data = _ref.data,\n      offset = _ref.offset,\n      skipAngle = _ref.skipAngle,\n      label = _ref.label,\n      textColor = _ref.textColor;\n  var getLabel = usePropertyAccessor(label);\n  var theme = useTheme();\n  var getTextColor = useInheritedColor(textColor, theme);\n  var computeExtraProps = useCallback(function (datum) {\n    return {\n      label: getLabel(datum),\n      textColor: getTextColor(datum)\n    };\n  }, [getLabel, getTextColor]);\n  return useArcCenters({\n    data: data,\n    offset: offset,\n    skipAngle: skipAngle,\n    computeExtraProps: computeExtraProps\n  });\n};\n\nvar computeArcLinkTextAnchor = function computeArcLinkTextAnchor(arc) {\n  var centerAngle = getNormalizedAngle(arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2);\n\n  if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n    return 'start';\n  }\n\n  return 'end';\n};\n\nvar computeArcLink = function computeArcLink(arc, offset, diagonalLength, straightLength) {\n  var centerAngle = getNormalizedAngle(arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2);\n  var point0 = positionFromAngle(centerAngle, arc.outerRadius + offset);\n  var point1 = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength);\n  var side;\n  var point2;\n\n  if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n    side = 'after';\n    point2 = {\n      x: point1.x + straightLength,\n      y: point1.y\n    };\n  } else {\n    side = 'before';\n    point2 = {\n      x: point1.x - straightLength,\n      y: point1.y\n    };\n  }\n\n  return {\n    side: side,\n    points: [point0, point1, point2]\n  };\n};\n\nvar lineGenerator = line().x(function (d) {\n  return d.x;\n}).y(function (d) {\n  return d.y;\n});\n\nvar useTransitionPhases = function useTransitionPhases(_ref) {\n  var offset = _ref.offset,\n      diagonalLength = _ref.diagonalLength,\n      straightLength = _ref.straightLength,\n      textOffset = _ref.textOffset,\n      getLinkColor = _ref.getLinkColor,\n      getTextColor = _ref.getTextColor;\n  return useMemo(function () {\n    return {\n      enter: function enter(datum) {\n        return {\n          startAngle: datum.arc.startAngle,\n          endAngle: datum.arc.endAngle,\n          innerRadius: datum.arc.innerRadius,\n          outerRadius: datum.arc.outerRadius,\n          offset: offset,\n          diagonalLength: 0,\n          straightLength: 0,\n          textOffset: textOffset,\n          linkColor: getLinkColor(datum),\n          textColor: getTextColor(datum),\n          opacity: 0\n        };\n      },\n      update: function update(d) {\n        return {\n          startAngle: d.arc.startAngle,\n          endAngle: d.arc.endAngle,\n          innerRadius: d.arc.innerRadius,\n          outerRadius: d.arc.outerRadius,\n          offset: offset,\n          diagonalLength: diagonalLength,\n          straightLength: straightLength,\n          textOffset: textOffset,\n          linkColor: getLinkColor(d),\n          textColor: getTextColor(d),\n          opacity: 1\n        };\n      },\n      leave: function leave(d) {\n        return {\n          startAngle: d.arc.startAngle,\n          endAngle: d.arc.endAngle,\n          innerRadius: d.arc.innerRadius,\n          outerRadius: d.arc.outerRadius,\n          offset: offset,\n          diagonalLength: 0,\n          straightLength: 0,\n          textOffset: textOffset,\n          linkColor: getLinkColor(d),\n          textColor: getTextColor(d),\n          opacity: 0\n        };\n      }\n    };\n  }, [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]);\n};\n\nvar interpolateLink = function interpolateLink(startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, offsetValue, diagonalLengthValue, straightLengthValue) {\n  return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, offsetValue, diagonalLengthValue, straightLengthValue], function (startAngle, endAngle, innerRadius, outerRadius, offset, diagonalLengthAnimated, straightLengthAnimated) {\n    var _computeArcLink = computeArcLink({\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius\n    }, offset, diagonalLengthAnimated, straightLengthAnimated),\n        points = _computeArcLink.points;\n\n    return lineGenerator(points);\n  });\n};\n\nvar interpolateTextAnchor = function interpolateTextAnchor(startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue) {\n  return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue], function (startAngle, endAngle, innerRadius, outerRadius) {\n    return computeArcLinkTextAnchor({\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius\n    });\n  });\n};\n\nvar interpolateTextPosition = function interpolateTextPosition(startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, offsetValue, diagonalLengthValue, straightLengthValue, textOffsetValue) {\n  return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, offsetValue, diagonalLengthValue, straightLengthValue, textOffsetValue], function (startAngle, endAngle, innerRadius, outerRadius, offset, diagonalLengthAnimated, straightLengthAnimated, textOffset) {\n    var _computeArcLink2 = computeArcLink({\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius\n    }, offset, diagonalLengthAnimated, straightLengthAnimated),\n        points = _computeArcLink2.points,\n        side = _computeArcLink2.side;\n\n    var position = points[2];\n\n    if (side === 'before') {\n      position.x -= textOffset;\n    } else {\n      position.x += textOffset;\n    }\n\n    return \"translate(\".concat(position.x, \",\").concat(position.y, \")\");\n  });\n};\n\nvar useArcLinkLabelsTransition = function useArcLinkLabelsTransition(_ref2) {\n  var data = _ref2.data,\n      _ref2$offset = _ref2.offset,\n      offset = _ref2$offset === void 0 ? 0 : _ref2$offset,\n      diagonalLength = _ref2.diagonalLength,\n      straightLength = _ref2.straightLength,\n      _ref2$skipAngle = _ref2.skipAngle,\n      skipAngle = _ref2$skipAngle === void 0 ? 0 : _ref2$skipAngle,\n      textOffset = _ref2.textOffset,\n      linkColor = _ref2.linkColor,\n      textColor = _ref2.textColor;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var theme = useTheme();\n  var getLinkColor = useInheritedColor(linkColor, theme);\n  var getTextColor = useInheritedColor(textColor, theme);\n  var filteredData = useFilteredDataBySkipAngle(data, skipAngle);\n  var transitionPhases = useTransitionPhases({\n    offset: offset,\n    diagonalLength: diagonalLength,\n    straightLength: straightLength,\n    textOffset: textOffset,\n    getLinkColor: getLinkColor,\n    getTextColor: getTextColor\n  });\n  var transition = useTransition(filteredData, {\n    keys: function keys(datum) {\n      return datum.id;\n    },\n    initial: transitionPhases.update,\n    from: transitionPhases.enter,\n    enter: transitionPhases.update,\n    update: transitionPhases.update,\n    leave: transitionPhases.leave,\n    config: springConfig,\n    immediate: !animate\n  });\n  return {\n    transition: transition,\n    interpolateLink: interpolateLink,\n    interpolateTextAnchor: interpolateTextAnchor,\n    interpolateTextPosition: interpolateTextPosition\n  };\n};\n\nvar ArcLinkLabel = function ArcLinkLabel(_ref) {\n  var label = _ref.label,\n      style = _ref.style;\n  var theme = useTheme();\n  return React.createElement(animated.g, {\n    opacity: style.opacity\n  }, React.createElement(animated.path, {\n    fill: \"none\",\n    stroke: style.linkColor,\n    strokeWidth: style.thickness,\n    d: style.path\n  }), React.createElement(animated.text, {\n    transform: style.textPosition,\n    textAnchor: style.textAnchor,\n    dominantBaseline: \"central\",\n    style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n      fill: style.textColor\n    })\n  }, label));\n};\n\nvar ArcLinkLabelsLayer = function ArcLinkLabelsLayer(_ref) {\n  var center = _ref.center,\n      data = _ref.data,\n      labelAccessor = _ref.label,\n      skipAngle = _ref.skipAngle,\n      offset = _ref.offset,\n      diagonalLength = _ref.diagonalLength,\n      straightLength = _ref.straightLength,\n      strokeWidth = _ref.strokeWidth,\n      textOffset = _ref.textOffset,\n      textColor = _ref.textColor,\n      linkColor = _ref.linkColor,\n      _ref$component = _ref.component,\n      component = _ref$component === void 0 ? ArcLinkLabel : _ref$component;\n  var getLabel = usePropertyAccessor(labelAccessor);\n\n  var _useArcLinkLabelsTran = useArcLinkLabelsTransition({\n    data: data,\n    skipAngle: skipAngle,\n    offset: offset,\n    diagonalLength: diagonalLength,\n    straightLength: straightLength,\n    textOffset: textOffset,\n    linkColor: linkColor,\n    textColor: textColor\n  }),\n      transition = _useArcLinkLabelsTran.transition,\n      interpolateLink = _useArcLinkLabelsTran.interpolateLink,\n      interpolateTextAnchor = _useArcLinkLabelsTran.interpolateTextAnchor,\n      interpolateTextPosition = _useArcLinkLabelsTran.interpolateTextPosition;\n\n  var Label = component;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(center[0], \",\").concat(center[1], \")\")\n  }, transition(function (transitionProps, datum) {\n    return React.createElement(Label, {\n      key: datum.id,\n      datum: datum,\n      label: getLabel(datum),\n      style: _objectSpread2(_objectSpread2({}, transitionProps), {}, {\n        thickness: strokeWidth,\n        path: interpolateLink(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius, transitionProps.offset, transitionProps.diagonalLength, transitionProps.straightLength),\n        textAnchor: interpolateTextAnchor(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius),\n        textPosition: interpolateTextPosition(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius, transitionProps.offset, transitionProps.diagonalLength, transitionProps.straightLength, transitionProps.textOffset)\n      })\n    });\n  }));\n};\n\nvar drawCanvasArcLinkLabels = function drawCanvasArcLinkLabels(ctx, labels, theme, strokeWidth) {\n  ctx.textBaseline = 'middle';\n  ctx.font = \"\".concat(theme.labels.text.fontSize, \"px \").concat(theme.labels.text.fontFamily);\n  labels.forEach(function (label) {\n    ctx.fillStyle = label.textColor;\n    ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor];\n    ctx.fillText(\"\".concat(label.label), label.x, label.y);\n    ctx.beginPath();\n    ctx.strokeStyle = label.linkColor;\n    ctx.lineWidth = strokeWidth;\n    label.points.forEach(function (point, index) {\n      if (index === 0) ctx.moveTo(point.x, point.y);else ctx.lineTo(point.x, point.y);\n    });\n    ctx.stroke();\n  });\n};\n\nvar useArcLinks = function useArcLinks(_ref) {\n  var data = _ref.data,\n      _ref$skipAngle = _ref.skipAngle,\n      skipAngle = _ref$skipAngle === void 0 ? 0 : _ref$skipAngle,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0.5 : _ref$offset,\n      diagonalLength = _ref.diagonalLength,\n      straightLength = _ref.straightLength,\n      _ref$computeExtraProp = _ref.computeExtraProps,\n      computeExtraProps = _ref$computeExtraProp === void 0 ? function () {\n    return {};\n  } : _ref$computeExtraProp;\n  var links = useMemo(function () {\n    return data.filter(function (datum) {\n      return Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle;\n    }).map(function (datum) {\n      return _objectSpread2(_objectSpread2({}, computeArcLink(datum.arc, offset, diagonalLength, straightLength)), {}, {\n        data: datum\n      });\n    });\n  }, [data, skipAngle, offset, diagonalLength, straightLength]);\n  return useMemo(function () {\n    return links.map(function (link) {\n      return _objectSpread2(_objectSpread2({}, computeExtraProps(link)), link);\n    });\n  }, [links, computeExtraProps]);\n};\n\nvar useArcLinkLabels = function useArcLinkLabels(_ref) {\n  var data = _ref.data,\n      skipAngle = _ref.skipAngle,\n      offset = _ref.offset,\n      diagonalLength = _ref.diagonalLength,\n      straightLength = _ref.straightLength,\n      _ref$textOffset = _ref.textOffset,\n      textOffset = _ref$textOffset === void 0 ? 0 : _ref$textOffset,\n      label = _ref.label,\n      linkColor = _ref.linkColor,\n      textColor = _ref.textColor;\n  var getLabel = usePropertyAccessor(label);\n  var theme = useTheme();\n  var getLinkColor = useInheritedColor(linkColor, theme);\n  var getTextColor = useInheritedColor(textColor, theme);\n  var computeExtraProps = useCallback(function (link) {\n    var position = {\n      x: link.points[2].x,\n      y: link.points[2].y\n    };\n    var textAnchor;\n\n    if (link.side === 'before') {\n      position.x -= textOffset;\n      textAnchor = 'end';\n    } else {\n      position.x += textOffset;\n      textAnchor = 'start';\n    }\n\n    return _objectSpread2(_objectSpread2({}, position), {}, {\n      label: getLabel(link.data),\n      linkColor: getLinkColor(link.data),\n      textAnchor: textAnchor,\n      textColor: getTextColor(link.data)\n    });\n  }, [getLabel, getLinkColor, getTextColor, textOffset]);\n  return useArcLinks({\n    data: data,\n    skipAngle: skipAngle,\n    offset: offset,\n    diagonalLength: diagonalLength,\n    straightLength: straightLength,\n    computeExtraProps: computeExtraProps\n  });\n};\n\nvar ArcShape = function ArcShape(_ref) {\n  var datum = _ref.datum,\n      style = _ref.style,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave;\n  var handleClick = useCallback(function (event) {\n    return onClick === null || onClick === void 0 ? void 0 : onClick(datum, event);\n  }, [onClick, datum]);\n  var handleMouseEnter = useCallback(function (event) {\n    return onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(datum, event);\n  }, [onMouseEnter, datum]);\n  var handleMouseMove = useCallback(function (event) {\n    return onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(datum, event);\n  }, [onMouseMove, datum]);\n  var handleMouseLeave = useCallback(function (event) {\n    return onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(datum, event);\n  }, [onMouseLeave, datum]);\n  return React.createElement(animated.path, {\n    d: style.path,\n    opacity: style.opacity,\n    fill: datum.fill || style.color,\n    stroke: style.borderColor,\n    strokeWidth: style.borderWidth,\n    onClick: onClick ? handleClick : undefined,\n    onMouseEnter: onMouseEnter ? handleMouseEnter : undefined,\n    onMouseMove: onMouseMove ? handleMouseMove : undefined,\n    onMouseLeave: onMouseLeave ? handleMouseLeave : undefined\n  });\n};\n\nvar interpolateArc = function interpolateArc(startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue, arcGenerator) {\n  return to([startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue], function (startAngle, endAngle, innerRadius, outerRadius) {\n    return arcGenerator({\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: Math.max(0, innerRadius),\n      outerRadius: Math.max(0, outerRadius)\n    });\n  });\n};\n\nvar useArcsTransition = function useArcsTransition(data) {\n  var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'innerRadius';\n  var extra = arguments.length > 2 ? arguments[2] : undefined;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var phases = useArcTransitionMode(mode, extra);\n  var transition = useTransition(data, {\n    keys: function keys(datum) {\n      return datum.id;\n    },\n    initial: phases.update,\n    from: phases.enter,\n    enter: phases.update,\n    update: phases.update,\n    leave: phases.leave,\n    config: springConfig,\n    immediate: !animate\n  });\n  return {\n    transition: transition,\n    interpolate: interpolateArc\n  };\n};\n\nvar ArcsLayer = function ArcsLayer(_ref) {\n  var center = _ref.center,\n      data = _ref.data,\n      arcGenerator = _ref.arcGenerator,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      transitionMode = _ref.transitionMode,\n      _ref$component = _ref.component,\n      component = _ref$component === void 0 ? ArcShape : _ref$component;\n  var theme = useTheme();\n  var getBorderColor = useInheritedColor(borderColor, theme);\n\n  var _useArcsTransition = useArcsTransition(data, transitionMode, {\n    enter: function enter(datum) {\n      return {\n        opacity: 0,\n        color: datum.color,\n        borderColor: getBorderColor(datum)\n      };\n    },\n    update: function update(datum) {\n      return {\n        opacity: 1,\n        color: datum.color,\n        borderColor: getBorderColor(datum)\n      };\n    },\n    leave: function leave(datum) {\n      return {\n        opacity: 0,\n        color: datum.color,\n        borderColor: getBorderColor(datum)\n      };\n    }\n  }),\n      transition = _useArcsTransition.transition,\n      interpolate = _useArcsTransition.interpolate;\n\n  var Arc = component;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(center[0], \",\").concat(center[1], \")\")\n  }, transition(function (transitionProps, datum) {\n    return createElement(Arc, {\n      key: datum.id,\n      datum: datum,\n      style: _objectSpread2(_objectSpread2({}, transitionProps), {}, {\n        borderWidth: borderWidth,\n        path: interpolate(transitionProps.startAngle, transitionProps.endAngle, transitionProps.innerRadius, transitionProps.outerRadius, arcGenerator)\n      }),\n      onClick: onClick,\n      onMouseEnter: onMouseEnter,\n      onMouseMove: onMouseMove,\n      onMouseLeave: onMouseLeave\n    });\n  }));\n};\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar computeArcBoundingBox = function computeArcBoundingBox(centerX, centerY, radius, startAngle, endAngle) {\n  var includeCenter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  var points = [];\n  var p0 = positionFromAngle(degreesToRadians(startAngle), radius);\n  points.push([p0.x, p0.y]);\n  var p1 = positionFromAngle(degreesToRadians(endAngle), radius);\n  points.push([p1.x, p1.y]);\n\n  for (var angle = Math.round(Math.min(startAngle, endAngle)); angle <= Math.round(Math.max(startAngle, endAngle)); angle++) {\n    if (angle % 90 === 0) {\n      var p = positionFromAngle(degreesToRadians(angle), radius);\n      points.push([p.x, p.y]);\n    }\n  }\n\n  points = points.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        x = _ref2[0],\n        y = _ref2[1];\n\n    return [centerX + x, centerY + y];\n  });\n\n  if (includeCenter === true) {\n    points.push([centerX, centerY]);\n  }\n\n  var xs = points.map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 1),\n        x = _ref4[0];\n\n    return x;\n  });\n  var ys = points.map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        y = _ref6[1];\n\n    return y;\n  });\n  var x0 = Math.min.apply(Math, _toConsumableArray(xs));\n  var x1 = Math.max.apply(Math, _toConsumableArray(xs));\n  var y0 = Math.min.apply(Math, _toConsumableArray(ys));\n  var y1 = Math.max.apply(Math, _toConsumableArray(ys));\n  return {\n    points: points,\n    x: x0,\n    y: y0,\n    width: x1 - x0,\n    height: y1 - y0\n  };\n};\n\nvar isCursorInRing = function isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY) {\n  var distance = getDistance(cursorX, cursorY, centerX, centerY);\n  return distance < radius && distance > innerRadius;\n};\n\nvar findArcUnderCursor = function findArcUnderCursor(centerX, centerY, radius, innerRadius, arcs, cursorX, cursorY) {\n  if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n    return undefined;\n  }\n\n  var cursorAngle = getAngle(cursorX, cursorY, centerX, centerY);\n  return arcs.find(function (_ref) {\n    var startAngle = _ref.startAngle,\n        endAngle = _ref.endAngle;\n    return cursorAngle >= startAngle && cursorAngle < endAngle;\n  });\n};\n\nvar useAnimatedArc = function useAnimatedArc(datumWithArc, arcGenerator) {\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedValues = useSpring({\n    startAngle: datumWithArc.arc.startAngle,\n    endAngle: datumWithArc.arc.endAngle,\n    innerRadius: datumWithArc.arc.innerRadius,\n    outerRadius: datumWithArc.arc.outerRadius,\n    config: springConfig,\n    immediate: !animate\n  });\n  return _objectSpread2(_objectSpread2({}, animatedValues), {}, {\n    path: interpolateArc(animatedValues.startAngle, animatedValues.endAngle, animatedValues.innerRadius, animatedValues.outerRadius, arcGenerator)\n  });\n};\n\nvar useArcGenerator = function useArcGenerator() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$cornerRadius = _ref.cornerRadius,\n      cornerRadius = _ref$cornerRadius === void 0 ? 0 : _ref$cornerRadius,\n      _ref$padAngle = _ref.padAngle,\n      padAngle = _ref$padAngle === void 0 ? 0 : _ref$padAngle;\n\n  return useMemo(function () {\n    return arc().innerRadius(function (arc) {\n      return arc.innerRadius;\n    }).outerRadius(function (arc) {\n      return arc.outerRadius;\n    }).cornerRadius(cornerRadius).padAngle(padAngle);\n  }, [cornerRadius, padAngle]);\n};\n\nexport { ArcLabelsLayer, ArcLinkLabelsLayer, ArcShape, ArcsLayer, arcTransitionModeById, arcTransitionModes, computeArcBoundingBox, computeArcCenter, computeArcLink, computeArcLinkTextAnchor, drawCanvasArcLabels, drawCanvasArcLinkLabels, findArcUnderCursor, interpolateArc, interpolateArcCenter, isCursorInRing, useAnimatedArc, useArcCenters, useArcCentersTransition, useArcGenerator, useArcLabels, useArcLinkLabels, useArcLinkLabelsTransition, useArcLinks, useArcTransitionMode, useArcsTransition };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/utils.ts","../src/arcTransitionMode.ts","../src/centers.ts","../src/arc_labels/ArcLabel.tsx","../src/arc_labels/ArcLabelsLayer.tsx","../src/arc_labels/canvas.ts","../src/arc_labels/useArcLabels.ts","../src/arc_link_labels/compute.ts","../src/arc_link_labels/useArcLinkLabelsTransition.ts","../src/arc_link_labels/ArcLinkLabel.tsx","../src/arc_link_labels/ArcLinkLabelsLayer.tsx","../src/arc_link_labels/canvas.ts","../src/arc_link_labels/useArcLinks.ts","../src/arc_link_labels/useArcLinkLabels.ts","../src/ArcShape.tsx","../src/interpolateArc.ts","../src/useArcsTransition.ts","../src/ArcsLayer.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/boundingBox.ts","../src/interactivity.ts","../src/useAnimatedArc.ts","../src/useArcGenerator.ts"],"names":["defineProperty","getNormalizedAngle","normalizedAngle","angle","Math","filterDataBySkipAngle","radiansToDegrees","datum","useFilteredDataBySkipAngle","useMemo","arcTransitionModes","arcTransitionModeById","startAngle","enter","endAngle","arc","update","leave","middleAngle","innerRadius","outerRadius","centerRadius","pushIn","pushOut","useArcTransitionMode","transitionMode","progress","extraTransition","computeArcCenter","midAngle","radius","positionFromAngle","interpolateArcCenter","to","centroid","useArcCentersTransition","offset","mode","extra","animate","springConfig","useMotionConfig","phases","transition","useTransition","keys","initial","from","config","immediate","interpolate","useArcCenters","data","skipAngle","computeExtraProps","position","x","y","staticStyle","pointerEvents","ArcLabel","label","style","theme","useTheme","fill","textColor","ArcLabelsLayer","center","labelAccessor","radiusOffset","component","getLabel","usePropertyAccessor","getTextColor","useInheritedColor","filteredData","Label","key","transform","transitionProps","drawCanvasArcLabels","ctx","labels","useArcLabels","useCallback","computeArcLinkTextAnchor","centerAngle","computeArcLink","point0","point1","side","point2","points","lineGenerator","d","useTransitionPhases","diagonalLength","straightLength","textOffset","getLinkColor","linkColor","opacity","interpolateLink","interpolateTextAnchor","interpolateTextPosition","useArcLinkLabelsTransition","transitionPhases","ArcLinkLabel","path","ArcLinkLabelsLayer","strokeWidth","thickness","textAnchor","textPosition","drawCanvasArcLinkLabels","textPropsByEngine","index","point","useArcLinks","links","useArcLinkLabels","link","ArcShape","onClick","onMouseEnter","onMouseMove","onMouseLeave","handleClick","handleMouseEnter","handleMouseMove","handleMouseLeave","undefined","interpolateArc","arcGenerator","useArcsTransition","ArcsLayer","borderWidth","borderColor","getBorderColor","color","Arc","createElement","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayWithHoles","iterableToArrayLimit","nonIterableRest","computeArcBoundingBox","includeCenter","p0","degreesToRadians","p1","p","centerX","centerY","xs","ys","x0","x1","y0","y1","width","height","isCursorInRing","distance","getDistance","findArcUnderCursor","cursorAngle","getAngle","useAnimatedArc","animatedValues","useSpring","datumWithArc","useArcGenerator","cornerRadius","padAngle"],"mappings":"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","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from 'react-spring'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter = (offset: number) => (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            const centroid = computeArcCenter(\n                { startAngle, endAngle, innerRadius, outerRadius },\n                offset\n            )\n\n            return `translate(${centroid.x},${centroid.y})`\n        }\n    )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import React, { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: CompleteTheme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, label.x, label.y)\n    })\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from 'react-spring'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    } = useArcLinkLabelsTransition<Datum>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        linkColor,\n        textColor,\n    })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import {\n    // @ts-ignore\n    textPropsByEngine,\n    CompleteTheme,\n} from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: CompleteTheme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        ctx.fillText(`${label.label}`, label.x, label.y)\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n","import React, { useCallback } from 'react'\nimport { SpringValue, Interpolation, animated } from 'react-spring'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(event => onMouseEnter?.(datum, event), [\n        onMouseEnter,\n        datum,\n    ])\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(event => onMouseLeave?.(datum, event), [\n        onMouseLeave,\n        datum,\n    ])\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { to, SpringValue } from 'react-spring'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import React, { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter === true) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n","import { useSpring } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { Arc, ArcGenerator } from './types'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a single arc,\n * if you want to animate a group of arcs,\n * please have a look at the `useArcsTransition` hook.\n */\nexport const useAnimatedArc = (datumWithArc: { arc: Arc }, arcGenerator: ArcGenerator) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedValues = useSpring({\n        startAngle: datumWithArc.arc.startAngle,\n        endAngle: datumWithArc.arc.endAngle,\n        innerRadius: datumWithArc.arc.innerRadius,\n        outerRadius: datumWithArc.arc.outerRadius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        ...animatedValues,\n        path: interpolateArc(\n            animatedValues.startAngle,\n            animatedValues.endAngle,\n            animatedValues.innerRadius,\n            animatedValues.outerRadius,\n            arcGenerator\n        ),\n    }\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n"]},"metadata":{},"sourceType":"module"}